import{E as e}from"./index-CX8FTQxc.js";const n=Object.freeze({displayName:"Python",name:"python",patterns:[{include:"#statement"},{include:"#expression"}],repository:{"annotated-parameter":{begin:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(:)","dgv"),beginCaptures:{1:{name:"variable.parameter.function.language.python"},2:{name:"punctuation.separator.annotation.python"}},end:new RegExp("(,)|(?=\\))","dgv"),endCaptures:{1:{name:"punctuation.separator.parameters.python"}},patterns:[{include:"#expression"},{match:new RegExp("=(?!=)","dgv"),name:"keyword.operator.assignment.python"}]},"assignment-operator":{match:new RegExp("<<=|>>=|\\/\\/=|\\*\\*=|\\+=|-=|\\/=|@=|\\*=|%=|~=|\\^=|&=|\\|=|=(?!=)","dgv"),name:"keyword.operator.assignment.python"},backticks:{begin:new RegExp("`","dgv"),end:new RegExp("(?:`|(?<!\\\\)(\\n))","dgv"),name:"invalid.deprecated.backtick.python",patterns:[{include:"#expression"}]},"builtin-callables":{patterns:[{include:"#illegal-names"},{include:"#illegal-object-name"},{include:"#builtin-exceptions"},{include:"#builtin-functions"},{include:"#builtin-types"}]},"builtin-exceptions":{match:new RegExp("(?<!\\.)\\b((Arithmetic|Assertion|Attribute|Buffer|BlockingIO|BrokenPipe|ChildProcess|(Connection(Aborted|Refused|Reset)?)|EOF|Environment|FileExists|FileNotFound|FloatingPoint|IO|Import|Indentation|Index|Interrupted|IsADirectory|NotADirectory|Permission|ProcessLookup|Timeout|Key|Lookup|Memory|Name|NotImplemented|OS|Overflow|Reference|Runtime|Recursion|Syntax|System|Tab|Type|UnboundLocal|Unicode(Encode|Decode|Translate)?|Value|Windows|ZeroDivision|ModuleNotFound)Error|((Pending)?Deprecation|Runtime|Syntax|User|Future|Import|Unicode|Bytes|Resource)?Warning|SystemExit|Stop(Async)?Iteration|KeyboardInterrupt|GeneratorExit|(Base)?Exception)\\b","dgv"),name:"support.type.exception.python"},"builtin-functions":{patterns:[{match:new RegExp("(?<!\\.)\\b(__import__|abs|aiter|all|any|anext|ascii|bin|breakpoint|callable|chr|compile|copyright|credits|delattr|dir|divmod|enumerate|eval|exec|exit|filter|format|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|license|locals|map|max|memoryview|min|next|oct|open|ord|pow|print|quit|range|reload|repr|reversed|round|setattr|sorted|sum|vars|zip)\\b","dgv"),name:"support.function.builtin.python"},{match:new RegExp("(?<!\\.)\\b(file|reduce|intern|raw_input|unicode|cmp|basestring|execfile|long|xrange)\\b","dgv"),name:"variable.legacy.builtin.python"}]},"builtin-possible-callables":{patterns:[{include:"#builtin-callables"},{include:"#magic-names"}]},"builtin-types":{match:new RegExp("(?<!\\.)\\b(bool|bytearray|bytes|classmethod|complex|dict|float|frozenset|int|list|object|property|set|slice|staticmethod|str|tuple|type|super)\\b","dgv"),name:"support.type.python"},"call-wrapper-inheritance":{begin:new RegExp("\\b(?=([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(\\())","dgv"),end:new RegExp("(\\))","dgv"),endCaptures:{1:{name:"punctuation.definition.arguments.end.python"}},name:"meta.function-call.python",patterns:[{include:"#inheritance-name"},{include:"#function-arguments"}]},"class-declaration":{patterns:[{begin:new RegExp("\\p{space}*(class)\\p{space}+(?=[\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*([\\:\\(]))","dgv"),beginCaptures:{1:{name:"storage.type.class.python"}},end:new RegExp("(:)","dgv"),endCaptures:{1:{name:"punctuation.section.class.begin.python"}},name:"meta.class.python",patterns:[{include:"#class-name"},{include:"#class-inheritance"}]}]},"class-inheritance":{begin:new RegExp("(\\()","dgv"),beginCaptures:{1:{name:"punctuation.definition.inheritance.begin.python"}},end:new RegExp("(\\))","dgv"),endCaptures:{1:{name:"punctuation.definition.inheritance.end.python"}},name:"meta.class.inheritance.python",patterns:[{match:new RegExp("(\\*(?:\\*|))","dgv"),name:"keyword.operator.unpacking.arguments.python"},{match:new RegExp(",","dgv"),name:"punctuation.separator.inheritance.python"},{match:new RegExp("=(?!=)","dgv"),name:"keyword.operator.assignment.python"},{match:new RegExp("\\bmetaclass\\b","dgv"),name:"support.type.metaclass.python"},{include:"#illegal-names"},{include:"#class-kwarg"},{include:"#call-wrapper-inheritance"},{include:"#expression-base"},{include:"#member-access-class"},{include:"#inheritance-identifier"}]},"class-kwarg":{captures:{1:{name:"entity.other.inherited-class.python variable.parameter.class.python"},2:{name:"keyword.operator.assignment.python"}},match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(=)(?!=)","dgv")},"class-name":{patterns:[{include:"#illegal-object-name"},{include:"#builtin-possible-callables"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv"),name:"entity.name.type.class.python"}]},codetags:{captures:{1:{name:"keyword.codetag.notation.python"}},match:new RegExp("\\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\\b","dgv")},comments:{patterns:[{begin:new e("#\\p{space}*(type:)(?:(?=(\\p{space}*))\\2)(?!(?=\\n?$)|#)","dgv",{hiddenCaptures:[2]}),beginCaptures:{0:{name:"meta.typehint.comment.python"},1:{name:"comment.typehint.directive.notation.python"}},contentName:"meta.typehint.comment.python",end:new RegExp("(?:(?=\\n?$)|(?=#))","dgv"),name:"comment.line.number-sign.python",patterns:[{match:new RegExp("ignore(?=\\p{space}*(?:(?=\\n?$)|#))","dgvy"),name:"comment.typehint.ignore.notation.python"},{match:new RegExp("(?<!\\.)\\b(bool|bytes|float|int|object|str|List|Dict|Iterable|Sequence|Set|FrozenSet|Callable|Union|Tuple|Any|None)\\b","dgv"),name:"comment.typehint.type.notation.python"},{match:new RegExp("([\\[\\]\\(\\)\\,\\.\\=\\*]|(->))","dgv"),name:"comment.typehint.punctuation.notation.python"},{match:new RegExp("([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)","dgv"),name:"comment.typehint.variable.notation.python"}]},{include:"#comments-base"}]},"comments-base":{begin:new RegExp("(#)","dgv"),beginCaptures:{1:{name:"punctuation.definition.comment.python"}},end:new RegExp("((?=\\n?$))","dgv"),name:"comment.line.number-sign.python",patterns:[{include:"#codetags"}]},"comments-string-double-three":{begin:new RegExp("(#)","dgv"),beginCaptures:{1:{name:"punctuation.definition.comment.python"}},end:new RegExp('((?=\\n?$)|(?="""))',"dgv"),name:"comment.line.number-sign.python",patterns:[{include:"#codetags"}]},"comments-string-single-three":{begin:new RegExp("(#)","dgv"),beginCaptures:{1:{name:"punctuation.definition.comment.python"}},end:new RegExp("((?=\\n?$)|(?='''))","dgv"),name:"comment.line.number-sign.python",patterns:[{include:"#codetags"}]},"curly-braces":{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.definition.dict.begin.python"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.definition.dict.end.python"}},patterns:[{match:new RegExp(":","dgv"),name:"punctuation.separator.dict.python"},{include:"#expression"}]},decorator:{begin:new RegExp("^\\p{space}*((@))\\p{space}*(?=[\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)","dgv"),beginCaptures:{1:{name:"entity.name.function.decorator.python"},2:{name:"punctuation.definition.decorator.python"}},end:new RegExp("(\\))([^\\n]*?)(?=\\p{space}*(?:#|(?=\\n?$)))|(?=[\\n\\#])","dgv"),endCaptures:{1:{name:"punctuation.definition.arguments.end.python"},2:{name:"invalid.illegal.decorator.python"}},name:"meta.function.decorator.python",patterns:[{include:"#decorator-name"},{include:"#function-arguments"}]},"decorator-name":{patterns:[{include:"#builtin-callables"},{include:"#illegal-object-name"},{captures:{2:{name:"punctuation.separator.period.python"}},match:new RegExp("([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)|(\\.)","dgv"),name:"entity.name.function.decorator.python"},{include:"#line-continuation"},{captures:{1:{name:"invalid.illegal.decorator.python"}},match:new RegExp("\\p{space}*([^\\(\\p{Alpha}\\p{space}_\\.\\#\\\\][^\\n]*?)(?=#|(?=\\n?$))","dgv"),name:"invalid.illegal.decorator.python"}]},docstring:{patterns:[{begin:new RegExp(`('''|""")`,"dgv"),beginCaptures:{1:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("((?!))","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"}},name:"string.quoted.docstring.multi.python",patterns:[{include:"#docstring-prompt"},{include:"#codetags"},{include:"#docstring-guts-unicode"}]},{begin:new RegExp(`([rR])('''|""")`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"}},name:"string.quoted.docstring.raw.multi.python",patterns:[{include:"#string-consume-escape"},{include:"#docstring-prompt"},{include:"#codetags"}]},{begin:new RegExp(`(['"])`,"dgv"),beginCaptures:{1:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("((?!))|(\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.docstring.single.python",patterns:[{include:"#codetags"},{include:"#docstring-guts-unicode"}]},{begin:new RegExp(`([rR])(['"])`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)|(\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.docstring.raw.single.python",patterns:[{include:"#string-consume-escape"},{include:"#codetags"}]}]},"docstring-guts-unicode":{patterns:[{include:"#escape-sequence-unicode"},{include:"#escape-sequence"},{include:"#string-line-continuation"}]},"docstring-prompt":{captures:{1:{name:"keyword.control.flow.python"}},match:new e("(?:^|^)\\p{space}*((?:>>>|\\.\\.\\.)\\p{space})(?=\\p{space}*\\P{space})","dgv",{strategy:"clip_search"})},"docstring-statement":{begin:new RegExp(`^(?=\\p{space}*[rR]?('''|"""|['"]))`,"dgv"),end:new RegExp(`((?<=(?!))|^)(?!\\p{space}*[rR]?('''|"""|['"]))`,"dgv"),patterns:[{include:"#docstring"}]},"double-one-regexp-character-set":{patterns:[{match:new RegExp("\\[\\^?\\](?![^\\n]*?\\])","dgv")},{begin:new RegExp("(\\[)(\\^)?(\\])?","dgv"),beginCaptures:{1:{name:"punctuation.character.set.begin.regexp constant.other.set.regexp"},2:{name:"keyword.operator.negation.regexp"},3:{name:"constant.character.set.regexp"}},end:new RegExp('(\\]|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"punctuation.character.set.end.regexp constant.other.set.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.character.set.regexp",patterns:[{include:"#regexp-charecter-set-escapes"},{match:new RegExp("[^\\n]","dgv"),name:"constant.character.set.regexp"}]}]},"double-one-regexp-comments":{begin:new RegExp("\\(\\?#","dgv"),beginCaptures:{0:{name:"punctuation.comment.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"punctuation.comment.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"comment.regexp",patterns:[{include:"#codetags"}]},"double-one-regexp-conditional":{begin:new RegExp("(\\()\\?\\(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?|\\p{Nd}+)\\)","dgv"),beginCaptures:{0:{name:"keyword.operator.conditional.regexp"},1:{name:"punctuation.parenthesis.conditional.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-expression":{patterns:[{include:"#regexp-base-expression"},{include:"#double-one-regexp-character-set"},{include:"#double-one-regexp-comments"},{include:"#regexp-flags"},{include:"#double-one-regexp-named-group"},{include:"#regexp-backreference"},{include:"#double-one-regexp-lookahead"},{include:"#double-one-regexp-lookahead-negative"},{include:"#double-one-regexp-lookbehind"},{include:"#double-one-regexp-lookbehind-negative"},{include:"#double-one-regexp-conditional"},{include:"#double-one-regexp-parentheses-non-capturing"},{include:"#double-one-regexp-parentheses"}]},"double-one-regexp-lookahead":{begin:new RegExp("(\\()\\?=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-lookahead-negative":{begin:new RegExp("(\\()\\?!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.negative.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-lookbehind":{begin:new RegExp("(\\()\\?<=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-lookbehind-negative":{begin:new RegExp("(\\()\\?<!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.negative.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-named-group":{begin:new RegExp("(\\()(\\?P<[\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?>)","dgv"),beginCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp"},2:{name:"entity.name.tag.named.group.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.named.regexp",patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-parentheses":{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-one-regexp-parentheses-non-capturing":{begin:new RegExp("\\(\\?:","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp"}},end:new RegExp('(\\)|(?="))|((?=(?<!\\\\)\\n))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-one-regexp-expression"}]},"double-three-regexp-character-set":{patterns:[{match:new RegExp("\\[\\^?\\](?![^\\n]*?\\])","dgv")},{begin:new RegExp("(\\[)(\\^)?(\\])?","dgv"),beginCaptures:{1:{name:"punctuation.character.set.begin.regexp constant.other.set.regexp"},2:{name:"keyword.operator.negation.regexp"},3:{name:"constant.character.set.regexp"}},end:new RegExp('(\\]|(?="""))',"dgv"),endCaptures:{1:{name:"punctuation.character.set.end.regexp constant.other.set.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.character.set.regexp",patterns:[{include:"#regexp-charecter-set-escapes"},{match:new RegExp("[^\\n]","dgv"),name:"constant.character.set.regexp"}]}]},"double-three-regexp-comments":{begin:new RegExp("\\(\\?#","dgv"),beginCaptures:{0:{name:"punctuation.comment.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"punctuation.comment.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"comment.regexp",patterns:[{include:"#codetags"}]},"double-three-regexp-conditional":{begin:new RegExp("(\\()\\?\\(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?|\\p{Nd}+)\\)","dgv"),beginCaptures:{0:{name:"keyword.operator.conditional.regexp"},1:{name:"punctuation.parenthesis.conditional.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-expression":{patterns:[{include:"#regexp-base-expression"},{include:"#double-three-regexp-character-set"},{include:"#double-three-regexp-comments"},{include:"#regexp-flags"},{include:"#double-three-regexp-named-group"},{include:"#regexp-backreference"},{include:"#double-three-regexp-lookahead"},{include:"#double-three-regexp-lookahead-negative"},{include:"#double-three-regexp-lookbehind"},{include:"#double-three-regexp-lookbehind-negative"},{include:"#double-three-regexp-conditional"},{include:"#double-three-regexp-parentheses-non-capturing"},{include:"#double-three-regexp-parentheses"},{include:"#comments-string-double-three"}]},"double-three-regexp-lookahead":{begin:new RegExp("(\\()\\?=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-lookahead-negative":{begin:new RegExp("(\\()\\?!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.negative.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-lookbehind":{begin:new RegExp("(\\()\\?<=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-lookbehind-negative":{begin:new RegExp("(\\()\\?<!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.negative.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-named-group":{begin:new RegExp("(\\()(\\?P<[\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?>)","dgv"),beginCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp"},2:{name:"entity.name.tag.named.group.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.named.regexp",patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-parentheses":{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},"double-three-regexp-parentheses-non-capturing":{begin:new RegExp("\\(\\?:","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp"}},end:new RegExp('(\\)|(?="""))',"dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#double-three-regexp-expression"},{include:"#comments-string-double-three"}]},ellipsis:{match:new RegExp("\\.\\.\\.","dgv"),name:"constant.other.ellipsis.python"},"escape-sequence":{match:new RegExp(`\\\\(x\\p{AHex}{2}|[0-7]{1,3}|[\\\\"'abfnrtv])`,"dgv"),name:"constant.character.escape.python"},"escape-sequence-unicode":{patterns:[{match:new RegExp("\\\\(u\\p{AHex}{4}|U\\p{AHex}{8}|N\\{[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]+?\\})","dgv"),name:"constant.character.escape.python"}]},expression:{patterns:[{include:"#expression-base"},{include:"#member-access"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv")}]},"expression-bare":{patterns:[{include:"#backticks"},{include:"#illegal-anno"},{include:"#literal"},{include:"#regexp"},{include:"#string"},{include:"#lambda"},{include:"#generator"},{include:"#illegal-operator"},{include:"#operator"},{include:"#curly-braces"},{include:"#item-access"},{include:"#list"},{include:"#odd-function-call"},{include:"#round-braces"},{include:"#function-call"},{include:"#builtin-functions"},{include:"#builtin-types"},{include:"#builtin-exceptions"},{include:"#magic-names"},{include:"#special-names"},{include:"#illegal-names"},{include:"#special-variables"},{include:"#ellipsis"},{include:"#punctuation"},{include:"#line-continuation"}]},"expression-base":{patterns:[{include:"#comments"},{include:"#expression-bare"},{include:"#line-continuation"}]},"f-expression":{patterns:[{include:"#expression-bare"},{include:"#member-access"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv")}]},"fregexp-base-expression":{patterns:[{include:"#fregexp-quantifier"},{include:"#fstring-formatting-braces"},{match:new RegExp("\\{[^\\n]*?\\}","dgv")},{include:"#regexp-base-common"}]},"fregexp-quantifier":{match:new RegExp("\\{\\{(\\p{Nd}+|\\p{Nd}+,(\\p{Nd}+)?|,\\p{Nd}+)\\}\\}","dgv"),name:"keyword.operator.quantifier.regexp"},"fstring-fnorm-quoted-multi-line":{begin:new RegExp(`(\\b[fF])([bBuU])?('''|""")`,"dgv"),beginCaptures:{1:{name:"string.interpolated.python string.quoted.multi.python storage.type.string.python"},2:{name:"invalid.illegal.prefix.python"},3:{name:"punctuation.definition.string.begin.python string.interpolated.python string.quoted.multi.python"}},end:new RegExp("(\\3)()()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-guts"},{include:"#fstring-illegal-multi-brace"},{include:"#fstring-multi-brace"},{include:"#fstring-multi-core"}]},"fstring-fnorm-quoted-single-line":{begin:new RegExp(`(\\b[fF])([bBuU])?((['"]))`,"dgv"),beginCaptures:{1:{name:"string.interpolated.python string.quoted.single.python storage.type.string.python"},2:{name:"invalid.illegal.prefix.python"},3:{name:"punctuation.definition.string.begin.python string.interpolated.python string.quoted.single.python"}},end:new RegExp("(\\3)|((?<!\\\\)\\n)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-guts"},{include:"#fstring-illegal-single-brace"},{include:"#fstring-single-brace"},{include:"#fstring-single-core"}]},"fstring-formatting":{patterns:[{include:"#fstring-formatting-braces"},{include:"#fstring-formatting-singe-brace"}]},"fstring-formatting-braces":{patterns:[{captures:{1:{name:"constant.character.format.placeholder.other.python"},2:{name:"invalid.illegal.brace.python"},3:{name:"constant.character.format.placeholder.other.python"}},match:new RegExp("(\\{)(\\p{space}*?)(\\})","dgv")},{match:new RegExp("(\\{\\{|\\}\\})","dgv"),name:"constant.character.escape.python"}]},"fstring-formatting-singe-brace":{match:new RegExp("(\\}(?!\\}))","dgv"),name:"invalid.illegal.brace.python"},"fstring-guts":{patterns:[{include:"#escape-sequence-unicode"},{include:"#escape-sequence"},{include:"#string-line-continuation"},{include:"#fstring-formatting"}]},"fstring-illegal-multi-brace":{patterns:[{include:"#impossible"}]},"fstring-illegal-single-brace":{begin:new RegExp("(\\{)(?=[^\\n\\}]*(?=\\n?$)\\n?)","dgv"),beginCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},end:new RegExp("(\\})|(?=\\n)","dgv"),endCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},patterns:[{include:"#fstring-terminator-single"},{include:"#f-expression"}]},"fstring-multi-brace":{begin:new RegExp("(\\{)","dgv"),beginCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},end:new RegExp("(\\})","dgv"),endCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},patterns:[{include:"#fstring-terminator-multi"},{include:"#f-expression"}]},"fstring-multi-core":{match:new RegExp(`([^\\n]+?)(((?=\\n?$)\\n?)|(?=[\\\\\\}\\{]|'''|"""))|\\n`,"dgv"),name:"string.interpolated.python string.quoted.multi.python"},"fstring-normf-quoted-multi-line":{begin:new RegExp(`(\\b[bBuU])([fF])('''|""")`,"dgv"),beginCaptures:{1:{name:"invalid.illegal.prefix.python"},2:{name:"string.interpolated.python string.quoted.multi.python storage.type.string.python"},3:{name:"punctuation.definition.string.begin.python string.quoted.multi.python"}},end:new RegExp("(\\3)()()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-guts"},{include:"#fstring-illegal-multi-brace"},{include:"#fstring-multi-brace"},{include:"#fstring-multi-core"}]},"fstring-normf-quoted-single-line":{begin:new RegExp(`(\\b[bBuU])([fF])((['"]))`,"dgv"),beginCaptures:{1:{name:"invalid.illegal.prefix.python"},2:{name:"string.interpolated.python string.quoted.single.python storage.type.string.python"},3:{name:"punctuation.definition.string.begin.python string.quoted.single.python"}},end:new RegExp("(\\3)|((?<!\\\\)\\n)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-guts"},{include:"#fstring-illegal-single-brace"},{include:"#fstring-single-brace"},{include:"#fstring-single-core"}]},"fstring-raw-guts":{patterns:[{include:"#string-consume-escape"},{include:"#fstring-formatting"}]},"fstring-raw-multi-core":{match:new RegExp(`([^\\n]+?)(((?=\\n?$)\\n?)|(?=[\\\\\\}\\{]|'''|"""))|\\n`,"dgv"),name:"string.interpolated.python string.quoted.raw.multi.python"},"fstring-raw-quoted-multi-line":{begin:new RegExp(`(\\b(?:[rR][fF]|[fF][rR]))('''|""")`,"dgv"),beginCaptures:{1:{name:"string.interpolated.python string.quoted.raw.multi.python storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python string.quoted.raw.multi.python"}},end:new RegExp("(\\2)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.multi.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-raw-guts"},{include:"#fstring-illegal-multi-brace"},{include:"#fstring-multi-brace"},{include:"#fstring-raw-multi-core"}]},"fstring-raw-quoted-single-line":{begin:new RegExp(`(\\b(?:[rR][fF]|[fF][rR]))((['"]))`,"dgv"),beginCaptures:{1:{name:"string.interpolated.python string.quoted.raw.single.python storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python string.quoted.raw.single.python"}},end:new RegExp("(\\2)|((?<!\\\\)\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.single.python"},2:{name:"invalid.illegal.newline.python"}},name:"meta.fstring.python",patterns:[{include:"#fstring-raw-guts"},{include:"#fstring-illegal-single-brace"},{include:"#fstring-single-brace"},{include:"#fstring-raw-single-core"}]},"fstring-raw-single-core":{match:new RegExp(`([^\\n]+?)(((?=\\n?$)\\n?)|(?=[\\\\\\}\\{]|(['"])|((?<!\\\\)\\n)))|\\n`,"dgv"),name:"string.interpolated.python string.quoted.raw.single.python"},"fstring-single-brace":{begin:new RegExp("(\\{)","dgv"),beginCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},end:new RegExp("(\\})|(?=\\n)","dgv"),endCaptures:{1:{name:"constant.character.format.placeholder.other.python"}},patterns:[{include:"#fstring-terminator-single"},{include:"#f-expression"}]},"fstring-single-core":{match:new RegExp(`([^\\n]+?)(((?=\\n?$)\\n?)|(?=[\\\\\\}\\{]|(['"])|((?<!\\\\)\\n)))|\\n`,"dgv"),name:"string.interpolated.python string.quoted.single.python"},"fstring-terminator-multi":{patterns:[{match:new RegExp("(=(![rsa])?)(?=\\})","dgv"),name:"storage.type.format.python"},{match:new RegExp("(=?![rsa])(?=\\})","dgv"),name:"storage.type.format.python"},{captures:{1:{name:"storage.type.format.python"},2:{name:"storage.type.format.python"}},match:new RegExp("(=?(?:![rsa])?)(:[\\p{L}\\p{M}\\p{N}\\p{Pc}]?[\\<\\>\\=\\^]?[\\-\\+ ]?#?\\p{Nd}*,?(\\.\\p{Nd}+)?[bcdeEfFgGnosxX\\%]?)(?=\\})","dgv")},{include:"#fstring-terminator-multi-tail"}]},"fstring-terminator-multi-tail":{begin:new RegExp("(=?(?:![rsa])?)(:)(?=[^\\n]*?\\{)","dgv"),beginCaptures:{1:{name:"storage.type.format.python"},2:{name:"storage.type.format.python"}},end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#fstring-illegal-multi-brace"},{include:"#fstring-multi-brace"},{match:new RegExp("([bcdeEfFgGnosxX\\%])(?=\\})","dgv"),name:"storage.type.format.python"},{match:new RegExp("(\\.\\p{Nd}+)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(,)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(\\p{Nd}+)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(#)","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\-\\+ ])","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\<\\>\\=\\^])","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}])","dgv"),name:"storage.type.format.python"}]},"fstring-terminator-single":{patterns:[{match:new RegExp("(=(![rsa])?)(?=\\})","dgv"),name:"storage.type.format.python"},{match:new RegExp("(=?![rsa])(?=\\})","dgv"),name:"storage.type.format.python"},{captures:{1:{name:"storage.type.format.python"},2:{name:"storage.type.format.python"}},match:new RegExp("(=?(?:![rsa])?)(:[\\p{L}\\p{M}\\p{N}\\p{Pc}]?[\\<\\>\\=\\^]?[\\-\\+ ]?#?\\p{Nd}*,?(\\.\\p{Nd}+)?[bcdeEfFgGnosxX\\%]?)(?=\\})","dgv")},{include:"#fstring-terminator-single-tail"}]},"fstring-terminator-single-tail":{begin:new RegExp("(=?(?:![rsa])?)(:)(?=[^\\n]*?\\{)","dgv"),beginCaptures:{1:{name:"storage.type.format.python"},2:{name:"storage.type.format.python"}},end:new RegExp("(?=\\})|(?=\\n)","dgv"),patterns:[{include:"#fstring-illegal-single-brace"},{include:"#fstring-single-brace"},{match:new RegExp("([bcdeEfFgGnosxX\\%])(?=\\})","dgv"),name:"storage.type.format.python"},{match:new RegExp("(\\.\\p{Nd}+)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(,)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(\\p{Nd}+)","dgv"),name:"storage.type.format.python"},{match:new RegExp("(#)","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\-\\+ ])","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\<\\>\\=\\^])","dgv"),name:"storage.type.format.python"},{match:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}])","dgv"),name:"storage.type.format.python"}]},"function-arguments":{begin:new RegExp("(\\()","dgv"),beginCaptures:{1:{name:"punctuation.definition.arguments.begin.python"}},contentName:"meta.function-call.arguments.python",end:new RegExp("(?=\\))(?!\\)\\p{space}*\\()","dgv"),patterns:[{match:new RegExp("(,)","dgv"),name:"punctuation.separator.arguments.python"},{captures:{1:{name:"keyword.operator.unpacking.arguments.python"}},match:new RegExp("(?:(?<=[\\,\\(])|^)\\p{space}*(\\*{1,2})","dgv")},{include:"#lambda-incomplete"},{include:"#illegal-names"},{captures:{1:{name:"variable.parameter.function-call.python"},2:{name:"keyword.operator.assignment.python"}},match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(=)(?!=)","dgv")},{match:new RegExp("=(?!=)","dgv"),name:"keyword.operator.assignment.python"},{include:"#expression"},{captures:{1:{name:"punctuation.definition.arguments.end.python"},2:{name:"punctuation.definition.arguments.begin.python"}},match:new RegExp("\\p{space}*(\\))\\p{space}*(\\()","dgv")}]},"function-call":{begin:new RegExp("\\b(?=([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(\\())","dgv"),end:new RegExp("(\\))","dgv"),endCaptures:{1:{name:"punctuation.definition.arguments.end.python"}},name:"meta.function-call.python",patterns:[{include:"#special-variables"},{include:"#function-name"},{include:"#function-arguments"}]},"function-declaration":{begin:new RegExp("\\p{space}*(?:\\b(async)\\p{space}+)?\\b(def)\\p{space}+(?=[\\p{Alpha}_][\\p{Alpha}\\p{M}\\p{Nd}\\p{Pc}]*\\p{space}*\\()","dgv"),beginCaptures:{1:{name:"storage.type.function.async.python"},2:{name:"storage.type.function.python"}},end:new RegExp(`(:|(?=[\\#'"\\n]))`,"dgv"),endCaptures:{1:{name:"punctuation.section.function.begin.python"}},name:"meta.function.python",patterns:[{include:"#function-def-name"},{include:"#parameters"},{include:"#line-continuation"},{include:"#return-annotation"}]},"function-def-name":{patterns:[{include:"#illegal-object-name"},{include:"#builtin-possible-callables"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv"),name:"entity.name.function.python"}]},"function-name":{patterns:[{include:"#builtin-possible-callables"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv"),name:"meta.function-call.generic.python"}]},generator:{begin:new RegExp("\\bfor\\b","dgv"),beginCaptures:{0:{name:"keyword.control.flow.python"}},end:new RegExp("\\bin\\b","dgv"),endCaptures:{0:{name:"keyword.control.flow.python"}},patterns:[{include:"#expression"}]},"illegal-anno":{match:new RegExp("->","dgv"),name:"invalid.illegal.annotation.python"},"illegal-names":{captures:{1:{name:"keyword.control.flow.python"},2:{name:"keyword.control.import.python"}},match:new RegExp("\\b(?:(and|assert|async|await|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|in|is|(?<=\\.)lambda|lambda(?=\\p{space}*[\\.\\=])|nonlocal|not|or|pass|raise|return|try|while|with|yield)|(as|import))\\b","dgv")},"illegal-object-name":{match:new RegExp("\\b(True|False|None)\\b","dgv"),name:"keyword.illegal.name.python"},"illegal-operator":{patterns:[{match:new RegExp("&&|\\|\\||--|\\+\\+","dgv"),name:"invalid.illegal.operator.python"},{match:new RegExp("[\\?\\$]","dgv"),name:"invalid.illegal.operator.python"},{match:new RegExp("!\\b","dgv"),name:"invalid.illegal.operator.python"}]},import:{patterns:[{begin:new RegExp("\\b(?<!\\.)(from)\\b(?=[^\\n]+import)","dgv"),beginCaptures:{1:{name:"keyword.control.import.python"}},end:new RegExp("(?=\\n?$)|(?=import)","dgv"),patterns:[{match:new RegExp("\\.+","dgv"),name:"punctuation.separator.period.python"},{include:"#expression"}]},{begin:new RegExp("\\b(?<!\\.)(import)\\b","dgv"),beginCaptures:{1:{name:"keyword.control.import.python"}},end:new RegExp("(?=\\n?$)","dgv"),patterns:[{match:new RegExp("\\b(?<!\\.)as\\b","dgv"),name:"keyword.control.import.python"},{include:"#expression"}]}]},impossible:{match:new RegExp("(?=\\n?$)[^\\n]^","dgv")},"inheritance-identifier":{captures:{1:{name:"entity.other.inherited-class.python"}},match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv")},"inheritance-name":{patterns:[{include:"#lambda-incomplete"},{include:"#builtin-possible-callables"},{include:"#inheritance-identifier"}]},"item-access":{patterns:[{begin:new RegExp("\\b(?=[\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*\\[)","dgv"),end:new RegExp("(\\])","dgv"),endCaptures:{1:{name:"punctuation.definition.arguments.end.python"}},name:"meta.item-access.python",patterns:[{include:"#item-name"},{include:"#item-index"},{include:"#expression"}]}]},"item-index":{begin:new RegExp("(\\[)","dgv"),beginCaptures:{1:{name:"punctuation.definition.arguments.begin.python"}},contentName:"meta.item-access.arguments.python",end:new RegExp("(?=\\])","dgv"),patterns:[{match:new RegExp(":","dgv"),name:"punctuation.separator.slice.python"},{include:"#expression"}]},"item-name":{patterns:[{include:"#special-variables"},{include:"#builtin-functions"},{include:"#special-names"},{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv"),name:"meta.indexed-name.python"}]},lambda:{patterns:[{captures:{1:{name:"keyword.control.flow.python"}},match:new RegExp("((?<=\\.)lambda|lambda(?=\\p{space}*[\\.\\=]))","dgv")},{captures:{1:{name:"storage.type.function.lambda.python"}},match:new RegExp("\\b(lambda)\\p{space}*?(?=[\\,\\n]|(?=\\n?$))","dgv")},{begin:new RegExp("\\b(lambda)\\b","dgv"),beginCaptures:{1:{name:"storage.type.function.lambda.python"}},contentName:"meta.function.lambda.parameters.python",end:new RegExp("(:)|(\\n)","dgv"),endCaptures:{1:{name:"punctuation.section.function.lambda.begin.python"}},name:"meta.lambda-function.python",patterns:[{match:new RegExp("\\/","dgv"),name:"keyword.operator.positional.parameter.python"},{match:new RegExp("(\\*(?:\\*|))","dgv"),name:"keyword.operator.unpacking.parameter.python"},{include:"#lambda-nested-incomplete"},{include:"#illegal-names"},{captures:{1:{name:"variable.parameter.function.language.python"},2:{name:"punctuation.separator.parameters.python"}},match:new RegExp("([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(?:(,)|(?=:|(?=\\n?$)))","dgv")},{include:"#comments"},{include:"#backticks"},{include:"#illegal-anno"},{include:"#lambda-parameter-with-default"},{include:"#line-continuation"},{include:"#illegal-operator"}]}]},"lambda-incomplete":{match:new RegExp("\\blambda(?=\\p{space}*[\\,\\)])","dgv"),name:"storage.type.function.lambda.python"},"lambda-nested-incomplete":{match:new RegExp("\\blambda(?=\\p{space}*[\\:\\,\\)])","dgv"),name:"storage.type.function.lambda.python"},"lambda-parameter-with-default":{begin:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(=)","dgv"),beginCaptures:{1:{name:"variable.parameter.function.language.python"},2:{name:"keyword.operator.python"}},end:new RegExp("(,)|(?=:|(?=\\n?$))","dgv"),endCaptures:{1:{name:"punctuation.separator.parameters.python"}},patterns:[{include:"#expression"}]},"line-continuation":{patterns:[{captures:{1:{name:"punctuation.separator.continuation.line.python"},2:{name:"invalid.illegal.line.continuation.python"}},match:new RegExp("(\\\\)\\p{space}*(\\P{space}[^\\n]*(?=\\n?$)\\n?)","dgv")},{begin:new RegExp("(\\\\)\\p{space}*(?=\\n?$)\\n?","dgv"),beginCaptures:{1:{name:"punctuation.separator.continuation.line.python"}},end:new e(`(?=^\\p{space}*(?=\\n?$))|(?!(\\p{space}*[rR]?('''|"""|['"]))|(^(?=\\n?$)))`,"dgv",{strategy:"clip_search"}),patterns:[{include:"#regexp"},{include:"#string"}]}]},list:{begin:new RegExp("\\[","dgv"),beginCaptures:{0:{name:"punctuation.definition.list.begin.python"}},end:new RegExp("\\]","dgv"),endCaptures:{0:{name:"punctuation.definition.list.end.python"}},patterns:[{include:"#expression"}]},literal:{patterns:[{match:new RegExp("\\b(True|False|None|NotImplemented|Ellipsis)\\b","dgv"),name:"constant.language.python"},{include:"#number"}]},"loose-default":{begin:new RegExp("(=)","dgv"),beginCaptures:{1:{name:"keyword.operator.python"}},end:new RegExp("(,)|(?=\\))","dgv"),endCaptures:{1:{name:"punctuation.separator.parameters.python"}},patterns:[{include:"#expression"}]},"magic-function-names":{captures:{1:{name:"support.function.magic.python"}},match:new RegExp("\\b(__(?:abs|add|aenter|aexit|aiter|and|anext|await|bool|call|ceil|class_getitem|cmp|coerce|complex|contains|copy|deepcopy|del|delattr|delete|delitem|delslice|dir|div|divmod|enter|eq|exit|float|floor|floordiv|format|ge|get|getattr|getattribute|getinitargs|getitem|getnewargs|getslice|getstate|gt|hash|hex|iadd|iand|idiv|ifloordiv||ilshift|imod|imul|index|init|instancecheck|int|invert|ior|ipow|irshift|isub|iter|itruediv|ixor|le|len|long|lshift|lt|missing|mod|mul|ne|neg|new|next|nonzero|oct|or|pos|pow|radd|rand|rdiv|rdivmod|reduce|reduce_ex|repr|reversed|rfloordiv||rlshift|rmod|rmul|ror|round|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|set_name|setslice|setstate|sizeof|str|sub|subclasscheck|truediv|trunc|unicode|xor|matmul|rmatmul|imatmul|init_subclass|set_name|fspath|bytes|prepare|length_hint)__)\\b","dgv")},"magic-names":{patterns:[{include:"#magic-function-names"},{include:"#magic-variable-names"}]},"magic-variable-names":{captures:{1:{name:"support.variable.magic.python"}},match:new RegExp("\\b(__(?:all|annotations|bases|builtins|class|closure|code|debug|defaults|dict|doc|file|func|globals|kwdefaults|match_args|members|metaclass|methods|module|mro|mro_entries|name|qualname|post_init|self|signature|slots|subclasses|version|weakref|wrapped|classcell|spec|path|package|future|traceback)__)\\b","dgv")},"member-access":{begin:new RegExp("(\\.)\\p{space}*(?!\\.)","dgv"),beginCaptures:{1:{name:"punctuation.separator.period.python"}},end:new RegExp("(?<=\\P{space})(?=[^\\p{L}\\p{M}\\p{N}\\p{Pc}])|(^|(?<=\\p{space}))(?=[^\\\\\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}])|(?=\\n?$)","dgv"),name:"meta.member.access.python",patterns:[{include:"#function-call"},{include:"#member-access-base"},{include:"#member-access-attribute"}]},"member-access-attribute":{match:new RegExp("\\b([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b","dgv"),name:"meta.attribute.python"},"member-access-base":{patterns:[{include:"#magic-names"},{include:"#illegal-names"},{include:"#illegal-object-name"},{include:"#special-names"},{include:"#line-continuation"},{include:"#item-access"}]},"member-access-class":{begin:new RegExp("(\\.)\\p{space}*(?!\\.)","dgv"),beginCaptures:{1:{name:"punctuation.separator.period.python"}},end:new RegExp("(?<=\\P{space})(?=[^\\p{L}\\p{M}\\p{N}\\p{Pc}])|(?=\\n?$)","dgv"),name:"meta.member.access.python",patterns:[{include:"#call-wrapper-inheritance"},{include:"#member-access-base"},{include:"#inheritance-identifier"}]},number:{name:"constant.numeric.python",patterns:[{include:"#number-float"},{include:"#number-dec"},{include:"#number-hex"},{include:"#number-oct"},{include:"#number-bin"},{include:"#number-long"},{match:new RegExp("\\b[0-9]+[\\p{L}\\p{M}\\p{N}\\p{Pc}]+","dgv"),name:"invalid.illegal.name.python"}]},"number-bin":{captures:{1:{name:"storage.type.number.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\.])(0[bB])(_?[01])+\\b","dgv"),name:"constant.numeric.bin.python"},"number-dec":{captures:{1:{name:"storage.type.imaginary.number.python"},2:{name:"invalid.illegal.dec.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\.])(?:[1-9](?:_?[0-9])*|0+|[0-9](?:_?[0-9])*([jJ])|0([0-9]+)(?![eE\\.]))\\b","dgv"),name:"constant.numeric.dec.python"},"number-float":{captures:{1:{name:"storage.type.imaginary.number.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}])(?:(?:\\.[0-9](?:_?[0-9])*|[0-9](?:_?[0-9])*\\.[0-9](?:_?[0-9])*|[0-9](?:_?[0-9])*\\.)(?:[eE][\\+\\-]?[0-9](?:_?[0-9])*)?|[0-9](?:_?[0-9])*[eE][\\+\\-]?[0-9](?:_?[0-9])*)([jJ])?\\b","dgv"),name:"constant.numeric.float.python"},"number-hex":{captures:{1:{name:"storage.type.number.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\.])(0[xX])(_?\\p{AHex})+\\b","dgv"),name:"constant.numeric.hex.python"},"number-long":{captures:{2:{name:"storage.type.number.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\.])([1-9][0-9]*|0)([lL])\\b","dgv"),name:"constant.numeric.bin.python"},"number-oct":{captures:{1:{name:"storage.type.number.python"}},match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\.])(0[oO])(_?[0-7])+\\b","dgv"),name:"constant.numeric.oct.python"},"odd-function-call":{begin:new RegExp("(?<=[\\]\\)])\\p{space}*(?=\\()","dgv"),end:new RegExp("(\\))","dgv"),endCaptures:{1:{name:"punctuation.definition.arguments.end.python"}},patterns:[{include:"#function-arguments"}]},operator:{captures:{1:{name:"keyword.operator.logical.python"},2:{name:"keyword.control.flow.python"},3:{name:"keyword.operator.bitwise.python"},4:{name:"keyword.operator.arithmetic.python"},5:{name:"keyword.operator.comparison.python"},6:{name:"keyword.operator.assignment.python"}},match:new RegExp("\\b(?<!\\.)(?:(and|or|not|in|is)|(for|if|else|await|yield(?:\\p{space}+from)?))(?!\\p{space}*:)\\b|(<<|>>|[\\&\\|\\^\\~])|(\\*\\*|[\\*\\+\\-\\%]|\\/\\/|[\\/\\@])|(!=|==|>=|<=|[\\<\\>])|(:=)","dgv")},"parameter-special":{captures:{1:{name:"variable.parameter.function.language.python"},2:{name:"variable.parameter.function.language.special.self.python"},3:{name:"variable.parameter.function.language.special.cls.python"},4:{name:"punctuation.separator.parameters.python"}},match:new RegExp("\\b((self)|(cls))\\b\\p{space}*(?:(,)|(?=\\)))","dgv")},parameters:{begin:new RegExp("(\\()","dgv"),beginCaptures:{1:{name:"punctuation.definition.parameters.begin.python"}},end:new RegExp("(\\))","dgv"),endCaptures:{1:{name:"punctuation.definition.parameters.end.python"}},name:"meta.function.parameters.python",patterns:[{match:new RegExp("\\/","dgv"),name:"keyword.operator.positional.parameter.python"},{match:new RegExp("(\\*(?:\\*|))","dgv"),name:"keyword.operator.unpacking.parameter.python"},{include:"#lambda-incomplete"},{include:"#illegal-names"},{include:"#illegal-object-name"},{include:"#parameter-special"},{captures:{1:{name:"variable.parameter.function.language.python"},2:{name:"punctuation.separator.parameters.python"}},match:new RegExp("([\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(?:(,)|(?=[\\)\\#\\n\\=]))","dgv")},{include:"#comments"},{include:"#loose-default"},{include:"#annotated-parameter"}]},punctuation:{patterns:[{match:new RegExp(":","dgv"),name:"punctuation.separator.colon.python"},{match:new RegExp(",","dgv"),name:"punctuation.separator.element.python"}]},regexp:{patterns:[{include:"#regexp-single-three-line"},{include:"#regexp-double-three-line"},{include:"#regexp-single-one-line"},{include:"#regexp-double-one-line"}]},"regexp-backreference":{captures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.begin.regexp"},2:{name:"entity.name.tag.named.backreference.regexp"},3:{name:"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.end.regexp"}},match:new RegExp("(\\()(\\?P=[\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?)(\\))","dgv"),name:"meta.backreference.named.regexp"},"regexp-backreference-number":{captures:{1:{name:"entity.name.tag.backreference.regexp"}},match:new RegExp("(\\\\[1-9]\\p{Nd}?)","dgv"),name:"meta.backreference.regexp"},"regexp-base-common":{patterns:[{match:new RegExp("\\.","dgv"),name:"support.other.match.any.regexp"},{match:new RegExp("\\^","dgv"),name:"support.other.match.begin.regexp"},{match:new RegExp("\\$","dgv"),name:"support.other.match.end.regexp"},{match:new RegExp("[\\+\\*\\?]\\??","dgv"),name:"keyword.operator.quantifier.regexp"},{match:new RegExp("\\|","dgv"),name:"keyword.operator.disjunction.regexp"},{include:"#regexp-escape-sequence"}]},"regexp-base-expression":{patterns:[{include:"#regexp-quantifier"},{include:"#regexp-base-common"}]},"regexp-charecter-set-escapes":{patterns:[{match:new RegExp("\\\\[abfnrtv\\\\]","dgv"),name:"constant.character.escape.regexp"},{include:"#regexp-escape-special"},{match:new RegExp("\\\\([0-7]{1,3})","dgv"),name:"constant.character.escape.regexp"},{include:"#regexp-escape-character"},{include:"#regexp-escape-unicode"},{include:"#regexp-escape-catchall"}]},"regexp-double-one-line":{begin:new RegExp('\\b(([uU]r)|([bB]r)|(r[bB]?))(")',"dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"storage.type.string.python"},5:{name:"punctuation.definition.string.begin.python"}},end:new RegExp('(")|(?<!\\\\)(\\n)',"dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.regexp.quoted.single.python",patterns:[{include:"#double-one-regexp-expression"}]},"regexp-double-three-line":{begin:new RegExp('\\b(([uU]r)|([bB]r)|(r[bB]?))(""")',"dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"storage.type.string.python"},5:{name:"punctuation.definition.string.begin.python"}},end:new RegExp('(""")',"dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.regexp.quoted.multi.python",patterns:[{include:"#double-three-regexp-expression"}]},"regexp-escape-catchall":{match:new RegExp("\\\\([^\\n]|\\n)","dgv"),name:"constant.character.escape.regexp"},"regexp-escape-character":{match:new RegExp("\\\\(x\\p{AHex}{2}|0[0-7]{1,2}|[0-7]{3})","dgv"),name:"constant.character.escape.regexp"},"regexp-escape-sequence":{patterns:[{include:"#regexp-escape-special"},{include:"#regexp-escape-character"},{include:"#regexp-escape-unicode"},{include:"#regexp-backreference-number"},{include:"#regexp-escape-catchall"}]},"regexp-escape-special":{match:new RegExp("\\\\([AbBdDsSwWZ])","dgv"),name:"support.other.escape.special.regexp"},"regexp-escape-unicode":{match:new RegExp("\\\\(u\\p{AHex}{4}|U\\p{AHex}{8})","dgv"),name:"constant.character.unicode.regexp"},"regexp-flags":{match:new RegExp("\\(\\?[aiLmsux]+\\)","dgv"),name:"storage.modifier.flag.regexp"},"regexp-quantifier":{match:new RegExp("\\{(\\p{Nd}+|\\p{Nd}+,(\\p{Nd}+)?|,\\p{Nd}+)\\}","dgv"),name:"keyword.operator.quantifier.regexp"},"regexp-single-one-line":{begin:new RegExp("\\b(([uU]r)|([bB]r)|(r[bB]?))(')","dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"storage.type.string.python"},5:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(')|(?<!\\\\)(\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.regexp.quoted.single.python",patterns:[{include:"#single-one-regexp-expression"}]},"regexp-single-three-line":{begin:new RegExp("\\b(([uU]r)|([bB]r)|(r[bB]?))(''')","dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"storage.type.string.python"},5:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(''')","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.regexp.quoted.multi.python",patterns:[{include:"#single-three-regexp-expression"}]},"return-annotation":{begin:new RegExp("(->)","dgv"),beginCaptures:{1:{name:"punctuation.separator.annotation.result.python"}},end:new RegExp("(?=:)","dgv"),patterns:[{include:"#expression"}]},"round-braces":{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"punctuation.parenthesis.begin.python"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.parenthesis.end.python"}},patterns:[{include:"#expression"}]},semicolon:{patterns:[{match:new RegExp(";(?=\\n?$)","dgv"),name:"invalid.deprecated.semicolon.python"}]},"single-one-regexp-character-set":{patterns:[{match:new RegExp("\\[\\^?\\](?![^\\n]*?\\])","dgv")},{begin:new RegExp("(\\[)(\\^)?(\\])?","dgv"),beginCaptures:{1:{name:"punctuation.character.set.begin.regexp constant.other.set.regexp"},2:{name:"keyword.operator.negation.regexp"},3:{name:"constant.character.set.regexp"}},end:new RegExp("(\\]|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"punctuation.character.set.end.regexp constant.other.set.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.character.set.regexp",patterns:[{include:"#regexp-charecter-set-escapes"},{match:new RegExp("[^\\n]","dgv"),name:"constant.character.set.regexp"}]}]},"single-one-regexp-comments":{begin:new RegExp("\\(\\?#","dgv"),beginCaptures:{0:{name:"punctuation.comment.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"punctuation.comment.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"comment.regexp",patterns:[{include:"#codetags"}]},"single-one-regexp-conditional":{begin:new RegExp("(\\()\\?\\(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?|\\p{Nd}+)\\)","dgv"),beginCaptures:{0:{name:"keyword.operator.conditional.regexp"},1:{name:"punctuation.parenthesis.conditional.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-expression":{patterns:[{include:"#regexp-base-expression"},{include:"#single-one-regexp-character-set"},{include:"#single-one-regexp-comments"},{include:"#regexp-flags"},{include:"#single-one-regexp-named-group"},{include:"#regexp-backreference"},{include:"#single-one-regexp-lookahead"},{include:"#single-one-regexp-lookahead-negative"},{include:"#single-one-regexp-lookbehind"},{include:"#single-one-regexp-lookbehind-negative"},{include:"#single-one-regexp-conditional"},{include:"#single-one-regexp-parentheses-non-capturing"},{include:"#single-one-regexp-parentheses"}]},"single-one-regexp-lookahead":{begin:new RegExp("(\\()\\?=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-lookahead-negative":{begin:new RegExp("(\\()\\?!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.negative.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-lookbehind":{begin:new RegExp("(\\()\\?<=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-lookbehind-negative":{begin:new RegExp("(\\()\\?<!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.negative.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-named-group":{begin:new RegExp("(\\()(\\?P<[\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?>)","dgv"),beginCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp"},2:{name:"entity.name.tag.named.group.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.named.regexp",patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-parentheses":{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-one-regexp-parentheses-non-capturing":{begin:new RegExp("\\(\\?:","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp"}},end:new RegExp("(\\)|(?='))|((?=(?<!\\\\)\\n))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-one-regexp-expression"}]},"single-three-regexp-character-set":{patterns:[{match:new RegExp("\\[\\^?\\](?![^\\n]*?\\])","dgv")},{begin:new RegExp("(\\[)(\\^)?(\\])?","dgv"),beginCaptures:{1:{name:"punctuation.character.set.begin.regexp constant.other.set.regexp"},2:{name:"keyword.operator.negation.regexp"},3:{name:"constant.character.set.regexp"}},end:new RegExp("(\\]|(?='''))","dgv"),endCaptures:{1:{name:"punctuation.character.set.end.regexp constant.other.set.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.character.set.regexp",patterns:[{include:"#regexp-charecter-set-escapes"},{match:new RegExp("[^\\n]","dgv"),name:"constant.character.set.regexp"}]}]},"single-three-regexp-comments":{begin:new RegExp("\\(\\?#","dgv"),beginCaptures:{0:{name:"punctuation.comment.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"punctuation.comment.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"comment.regexp",patterns:[{include:"#codetags"}]},"single-three-regexp-conditional":{begin:new RegExp("(\\()\\?\\(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?|\\p{Nd}+)\\)","dgv"),beginCaptures:{0:{name:"keyword.operator.conditional.regexp"},1:{name:"punctuation.parenthesis.conditional.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-expression":{patterns:[{include:"#regexp-base-expression"},{include:"#single-three-regexp-character-set"},{include:"#single-three-regexp-comments"},{include:"#regexp-flags"},{include:"#single-three-regexp-named-group"},{include:"#regexp-backreference"},{include:"#single-three-regexp-lookahead"},{include:"#single-three-regexp-lookahead-negative"},{include:"#single-three-regexp-lookbehind"},{include:"#single-three-regexp-lookbehind-negative"},{include:"#single-three-regexp-conditional"},{include:"#single-three-regexp-parentheses-non-capturing"},{include:"#single-three-regexp-parentheses"},{include:"#comments-string-single-three"}]},"single-three-regexp-lookahead":{begin:new RegExp("(\\()\\?=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-lookahead-negative":{begin:new RegExp("(\\()\\?!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookahead.negative.regexp"},1:{name:"punctuation.parenthesis.lookahead.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-lookbehind":{begin:new RegExp("(\\()\\?<=","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-lookbehind-negative":{begin:new RegExp("(\\()\\?<!","dgv"),beginCaptures:{0:{name:"keyword.operator.lookbehind.negative.regexp"},1:{name:"punctuation.parenthesis.lookbehind.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-named-group":{begin:new RegExp("(\\()(\\?P<[\\p{L}\\p{M}\\p{N}\\p{Pc}]+(?:\\p{space}+[\\p{Alpha}\\p{Nd}]+)?>)","dgv"),beginCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp"},2:{name:"entity.name.tag.named.group.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp"},2:{name:"invalid.illegal.newline.python"}},name:"meta.named.regexp",patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-parentheses":{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"single-three-regexp-parentheses-non-capturing":{begin:new RegExp("\\(\\?:","dgv"),beginCaptures:{0:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp"}},end:new RegExp("(\\)|(?='''))","dgv"),endCaptures:{1:{name:"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp"},2:{name:"invalid.illegal.newline.python"}},patterns:[{include:"#single-three-regexp-expression"},{include:"#comments-string-single-three"}]},"special-names":{match:new RegExp("\\b(_*\\p{Upper}[_\\p{Nd}]*\\p{Upper})[\\p{Upper}\\p{Nd}]*(_[\\p{L}\\p{M}\\p{N}\\p{Pc}]*)?\\b","dgv"),name:"constant.other.caps.python"},"special-variables":{captures:{1:{name:"variable.language.special.self.python"},2:{name:"variable.language.special.cls.python"}},match:new RegExp("\\b(?<!\\.)(?:(self)|(cls))\\b","dgv")},statement:{patterns:[{include:"#import"},{include:"#class-declaration"},{include:"#function-declaration"},{include:"#generator"},{include:"#statement-keyword"},{include:"#assignment-operator"},{include:"#decorator"},{include:"#docstring-statement"},{include:"#semicolon"}]},"statement-keyword":{patterns:[{match:new RegExp("\\b((async\\p{space}+)?\\p{space}*def)\\b","dgv"),name:"storage.type.function.python"},{match:new RegExp("\\b(?<!\\.)as\\b(?=[^\\n]*[\\:\\\\])","dgv"),name:"keyword.control.flow.python"},{match:new RegExp("\\b(?<!\\.)as\\b","dgv"),name:"keyword.control.import.python"},{match:new RegExp("\\b(?<!\\.)(async|continue|del|assert|break|finally|for|from|elif|else|if|except|pass|raise|return|try|while|with)\\b","dgv"),name:"keyword.control.flow.python"},{match:new RegExp("\\b(?<!\\.)(global|nonlocal)\\b","dgv"),name:"storage.modifier.declaration.python"},{match:new RegExp("\\b(?<!\\.)(class)\\b","dgv"),name:"storage.type.class.python"},{captures:{1:{name:"keyword.control.flow.python"}},match:new RegExp(`^\\p{space}*(case|match)(?=\\p{space}*([\\-\\+\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{Nd}\\(\\[\\{'"\\:\\#]|(?=\\n?$)))\\b`,"dgv")}]},string:{patterns:[{include:"#string-quoted-multi-line"},{include:"#string-quoted-single-line"},{include:"#string-bin-quoted-multi-line"},{include:"#string-bin-quoted-single-line"},{include:"#string-raw-quoted-multi-line"},{include:"#string-raw-quoted-single-line"},{include:"#string-raw-bin-quoted-multi-line"},{include:"#string-raw-bin-quoted-single-line"},{include:"#fstring-fnorm-quoted-multi-line"},{include:"#fstring-fnorm-quoted-single-line"},{include:"#fstring-normf-quoted-multi-line"},{include:"#fstring-normf-quoted-single-line"},{include:"#fstring-raw-quoted-multi-line"},{include:"#fstring-raw-quoted-single-line"}]},"string-bin-quoted-multi-line":{begin:new RegExp(`(\\b[bB])('''|""")`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.binary.multi.python",patterns:[{include:"#string-entity"}]},"string-bin-quoted-single-line":{begin:new RegExp(`(\\b[bB])((['"]))`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)|((?<!\\\\)\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.binary.single.python",patterns:[{include:"#string-entity"}]},"string-brace-formatting":{patterns:[{captures:{1:{name:"constant.character.format.placeholder.other.python"},3:{name:"storage.type.format.python"},4:{name:"storage.type.format.python"}},match:new RegExp(`(\\{\\{|\\}\\}|\\{[\\p{L}\\p{M}\\p{N}\\p{Pc}]*(\\.[\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*|\\[[^\\]'"]+\\])*(![rsa])?(:[\\p{L}\\p{M}\\p{N}\\p{Pc}]?[\\<\\>\\=\\^]?[\\-\\+ ]?#?\\p{Nd}*,?(\\.\\p{Nd}+)?[bcdeEfFgGnosxX\\%]?)?\\})`,"dgv"),name:"meta.format.brace.python"},{captures:{1:{name:"constant.character.format.placeholder.other.python"},3:{name:"storage.type.format.python"},4:{name:"storage.type.format.python"}},match:new RegExp(`(\\{[\\p{L}\\p{M}\\p{N}\\p{Pc}]*(\\.[\\p{Alpha}_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*|\\[[^\\]'"]+\\])*(![rsa])?(:)[^'"\\{\\}\\n]*(?:\\{[^'"\\}\\n]*?\\}[^'"\\{\\}\\n]*)*\\})`,"dgv"),name:"meta.format.brace.python"}]},"string-consume-escape":{match:new RegExp(`\\\\['"\\n\\\\]`,"dgv")},"string-entity":{patterns:[{include:"#escape-sequence"},{include:"#string-line-continuation"},{include:"#string-formatting"}]},"string-formatting":{captures:{1:{name:"constant.character.format.placeholder.other.python"}},match:new RegExp("(%(\\([\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]*\\))?[\\-\\+\\#0 ]*(\\p{Nd}+|\\*)?(\\.(\\p{Nd}+|\\*))?([hlL])?[diouxXeEfFgGcrsab\\%])","dgv"),name:"meta.format.percent.python"},"string-line-continuation":{match:new RegExp("\\\\(?=\\n?$)","dgv"),name:"constant.language.python"},"string-multi-bad-brace1-formatting-raw":{begin:new RegExp(`(?=\\{%([^\\n]*?(?!'''|"""))%\\})`,"dgv"),end:new RegExp(`(?='''|""")`,"dgv"),patterns:[{include:"#string-consume-escape"}]},"string-multi-bad-brace1-formatting-unicode":{begin:new RegExp(`(?=\\{%([^\\n]*?(?!'''|"""))%\\})`,"dgv"),end:new RegExp(`(?='''|""")`,"dgv"),patterns:[{include:"#escape-sequence-unicode"},{include:"#escape-sequence"},{include:"#string-line-continuation"}]},"string-multi-bad-brace2-formatting-raw":{begin:new RegExp(`(?!\\{\\{)(?=\\{([\\p{L}\\p{M}\\p{N}\\p{Pc}]*?(?!'''|""")[^\\!\\:\\.\\[\\}\\p{L}\\p{M}\\p{N}\\p{Pc}])[^\\n]*?(?!'''|""")\\})`,"dgv"),end:new RegExp(`(?='''|""")`,"dgv"),patterns:[{include:"#string-consume-escape"},{include:"#string-formatting"}]},"string-multi-bad-brace2-formatting-unicode":{begin:new RegExp(`(?!\\{\\{)(?=\\{([\\p{L}\\p{M}\\p{N}\\p{Pc}]*?(?!'''|""")[^\\!\\:\\.\\[\\}\\p{L}\\p{M}\\p{N}\\p{Pc}])[^\\n]*?(?!'''|""")\\})`,"dgv"),end:new RegExp(`(?='''|""")`,"dgv"),patterns:[{include:"#escape-sequence-unicode"},{include:"#string-entity"}]},"string-quoted-multi-line":{begin:new RegExp(`(?:\\b([rR])(?=[uU]))?([uU])?('''|""")`,"dgv"),beginCaptures:{1:{name:"invalid.illegal.prefix.python"},2:{name:"storage.type.string.python"},3:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\3)()()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.multi.python",patterns:[{include:"#string-multi-bad-brace1-formatting-unicode"},{include:"#string-multi-bad-brace2-formatting-unicode"},{include:"#string-unicode-guts"}]},"string-quoted-single-line":{begin:new RegExp(`(?:\\b([rR])(?=[uU]))?([uU])?((['"]))`,"dgv"),beginCaptures:{1:{name:"invalid.illegal.prefix.python"},2:{name:"storage.type.string.python"},3:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\3)|((?<!\\\\)\\n)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.single.python",patterns:[{include:"#string-single-bad-brace1-formatting-unicode"},{include:"#string-single-bad-brace2-formatting-unicode"},{include:"#string-unicode-guts"}]},"string-raw-bin-guts":{patterns:[{include:"#string-consume-escape"},{include:"#string-formatting"}]},"string-raw-bin-quoted-multi-line":{begin:new RegExp(`(\\b(?:R[bB]|[bB]R))('''|""")`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.raw.binary.multi.python",patterns:[{include:"#string-raw-bin-guts"}]},"string-raw-bin-quoted-single-line":{begin:new RegExp(`(\\b(?:R[bB]|[bB]R))((['"]))`,"dgv"),beginCaptures:{1:{name:"storage.type.string.python"},2:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\2)|((?<!\\\\)\\n)","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.raw.binary.single.python",patterns:[{include:"#string-raw-bin-guts"}]},"string-raw-guts":{patterns:[{include:"#string-consume-escape"},{include:"#string-formatting"},{include:"#string-brace-formatting"}]},"string-raw-quoted-multi-line":{begin:new RegExp(`\\b(([uU]R)|(R))('''|""")`,"dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\4)()()()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.raw.multi.python",patterns:[{include:"#string-multi-bad-brace1-formatting-raw"},{include:"#string-multi-bad-brace2-formatting-raw"},{include:"#string-raw-guts"}]},"string-raw-quoted-single-line":{begin:new RegExp(`\\b(([uU]R)|(R))((['"]))`,"dgv"),beginCaptures:{2:{name:"invalid.deprecated.prefix.python"},3:{name:"storage.type.string.python"},4:{name:"punctuation.definition.string.begin.python"}},end:new RegExp("(\\4)|((?<!\\\\)\\n)()()","dgv"),endCaptures:{1:{name:"punctuation.definition.string.end.python"},2:{name:"invalid.illegal.newline.python"}},name:"string.quoted.raw.single.python",patterns:[{include:"#string-single-bad-brace1-formatting-raw"},{include:"#string-single-bad-brace2-formatting-raw"},{include:"#string-raw-guts"}]},"string-single-bad-brace1-formatting-raw":{begin:new RegExp(`(?=\\{%([^\\n]*?(?!(['"])|((?<!\\\\)\\n)))%\\})`,"dgv"),end:new RegExp(`(?=(['"])|((?<!\\\\)\\n))`,"dgv"),patterns:[{include:"#string-consume-escape"}]},"string-single-bad-brace1-formatting-unicode":{begin:new RegExp(`(?=\\{%([^\\n]*?(?!(['"])|((?<!\\\\)\\n)))%\\})`,"dgv"),end:new RegExp(`(?=(['"])|((?<!\\\\)\\n))`,"dgv"),patterns:[{include:"#escape-sequence-unicode"},{include:"#escape-sequence"},{include:"#string-line-continuation"}]},"string-single-bad-brace2-formatting-raw":{begin:new RegExp(`(?!\\{\\{)(?=\\{([\\p{L}\\p{M}\\p{N}\\p{Pc}]*?(?!(['"])|((?<!\\\\)\\n))[^\\!\\:\\.\\[\\}\\p{L}\\p{M}\\p{N}\\p{Pc}])[^\\n]*?(?!(['"])|((?<!\\\\)\\n))\\})`,"dgv"),end:new RegExp(`(?=(['"])|((?<!\\\\)\\n))`,"dgv"),patterns:[{include:"#string-consume-escape"},{include:"#string-formatting"}]},"string-single-bad-brace2-formatting-unicode":{begin:new RegExp(`(?!\\{\\{)(?=\\{([\\p{L}\\p{M}\\p{N}\\p{Pc}]*?(?!(['"])|((?<!\\\\)\\n))[^\\!\\:\\.\\[\\}\\p{L}\\p{M}\\p{N}\\p{Pc}])[^\\n]*?(?!(['"])|((?<!\\\\)\\n))\\})`,"dgv"),end:new RegExp(`(?=(['"])|((?<!\\\\)\\n))`,"dgv"),patterns:[{include:"#escape-sequence-unicode"},{include:"#string-entity"}]},"string-unicode-guts":{patterns:[{include:"#escape-sequence-unicode"},{include:"#string-entity"},{include:"#string-brace-formatting"}]}},scopeName:"source.python",embeddedLangs:void 0,aliases:["py"]}),a=[n];export{a as default};
