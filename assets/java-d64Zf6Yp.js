import{E as e}from"./index-ClyxTEJu.js";const a=Object.freeze({displayName:"Java",name:"java",patterns:[{begin:new RegExp("\\b(package)\\b\\p{space}*","dgv"),beginCaptures:{1:{name:"keyword.other.package.java"}},contentName:"storage.modifier.package.java",end:new RegExp("\\p{space}*(;)","dgv"),endCaptures:{1:{name:"punctuation.terminator.java"}},name:"meta.package.java",patterns:[{include:"#comments"},{match:new RegExp("(?<=\\.)\\p{space}*\\.|\\.(?=\\p{space}*;)","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("(?<!_)_(?=\\p{space}*([\\.\\;]))|\\b\\p{Nd}+|-+","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("[A-Z]+","dgv"),name:"invalid.deprecated.package_name_not_lowercase.java"},{match:new RegExp("\\b(?<!\\$)(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|non-sealed|package|permits|private|protected|public|return|sealed|short|static|strictfp|super|switch|syncronized|this|throw|throws|transient|try|void|volatile|while|yield|true|false|null)\\b","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.java"}]},{begin:new RegExp("\\b(import)\\b\\p{space}*\\b(static)?\\b\\p{space}","dgv"),beginCaptures:{1:{name:"keyword.other.import.java"},2:{name:"storage.modifier.java"}},contentName:"storage.modifier.import.java",end:new RegExp("\\p{space}*(;)","dgv"),endCaptures:{1:{name:"punctuation.terminator.java"}},name:"meta.import.java",patterns:[{include:"#comments"},{match:new RegExp("(?<=\\.)\\p{space}*\\.|\\.(?=\\p{space}*;)","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("(?<!\\.)\\p{space}*\\*","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("(?<!_)_(?=\\p{space}*([\\.\\;]))|\\b\\p{Nd}+|-+","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("\\b(?<!\\$)(abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|non-sealed|package|permits|private|protected|public|return|sealed|short|static|strictfp|super|switch|syncronized|this|throw|throws|transient|try|void|volatile|while|yield|true|false|null)\\b","dgv"),name:"invalid.illegal.character_not_allowed_here.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.java"},{match:new RegExp("\\*","dgv"),name:"variable.language.wildcard.java"}]},{include:"#comments-javadoc"},{include:"#code"},{include:"#module"}],repository:{"all-types":{patterns:[{include:"#primitive-arrays"},{include:"#primitive-types"},{include:"#object-types"}]},annotations:{patterns:[{begin:new RegExp("((@)\\p{space}*([^\\p{space}\\(]+))(\\()","dgv"),beginCaptures:{2:{name:"punctuation.definition.annotation.java"},3:{name:"storage.type.annotation.java"},4:{name:"punctuation.definition.annotation-arguments.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.annotation-arguments.end.bracket.round.java"}},name:"meta.declaration.annotation.java",patterns:[{captures:{1:{name:"constant.other.key.java"},2:{name:"keyword.operator.assignment.java"}},match:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(=)","dgv")},{include:"#code"}]},{captures:{1:{name:"punctuation.definition.annotation.java"},2:{name:"storage.modifier.java"},3:{name:"storage.type.annotation.java"},5:{name:"punctuation.definition.annotation.java"},6:{name:"storage.type.annotation.java"}},match:new RegExp("(@)(interface)\\p{space}+([\\p{L}\\p{M}\\p{N}\\p{Pc}]*)|((@)\\p{space}*([\\p{L}\\p{M}\\p{N}\\p{Pc}]+))","dgv"),name:"meta.declaration.annotation.java"}]},"anonymous-block-and-instance-initializer":{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.block.begin.bracket.curly.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.block.end.bracket.curly.java"}},patterns:[{include:"#code"}]},"anonymous-classes-and-new":{begin:new RegExp("\\bnew\\b","dgv"),beginCaptures:{0:{name:"keyword.control.new.java"}},end:new RegExp("(?=[\\;\\)\\]\\.\\,\\?\\:\\}\\+\\-\\*]|\\/(?![\\/\\*])|[\\%\\!\\&\\|\\^\\=])","dgv"),patterns:[{include:"#comments"},{include:"#function-call"},{include:"#all-types"},{begin:new RegExp("(?<=\\))","dgv"),end:new RegExp("(?=[\\;\\)\\]\\.\\,\\?\\:\\}\\+\\-\\*]|\\/(?![\\/\\*])|[\\%\\!\\&\\|\\^\\=])","dgv"),patterns:[{include:"#comments"},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.inner-class.begin.bracket.curly.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.inner-class.end.bracket.curly.java"}},name:"meta.inner-class.java",patterns:[{include:"#class-body"}]}]},{begin:new RegExp("(?<=\\])","dgv"),end:new RegExp("(?=[\\;\\)\\]\\.\\,\\?\\:\\}\\+\\-\\*]|\\/(?![\\/\\*])|[\\%\\!\\&\\|\\^\\=])","dgv"),patterns:[{include:"#comments"},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.array-initializer.begin.bracket.curly.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.array-initializer.end.bracket.curly.java"}},name:"meta.array-initializer.java",patterns:[{include:"#code"}]}]},{include:"#parens"}]},assertions:{patterns:[{begin:new RegExp("\\b(assert)\\p{space}","dgv"),beginCaptures:{1:{name:"keyword.control.assert.java"}},end:new RegExp("(?=\\n?$)","dgv"),name:"meta.declaration.assertion.java",patterns:[{match:new RegExp(":","dgv"),name:"keyword.operator.assert.expression-separator.java"},{include:"#code"}]}]},class:{begin:new RegExp("(?=[\\p{L}\\p{M}\\p{N}\\p{Pc}]?[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}\\-]*\\b(?:class|(?<!@)interface|enum)\\p{space}+[\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+)","dgv"),end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.class.end.bracket.curly.java"}},name:"meta.class.java",patterns:[{include:"#storage-modifiers"},{include:"#generics"},{include:"#comments"},{captures:{1:{name:"storage.modifier.java"},2:{name:"entity.name.type.class.java"}},match:new RegExp("(class|(?<!@)interface|enum)\\p{space}+([\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+)","dgv"),name:"meta.class.identifier.java"},{begin:new RegExp("extends","dgv"),beginCaptures:{0:{name:"storage.modifier.extends.java"}},end:new RegExp("(?=\\{|implements|permits)","dgv"),name:"meta.definition.class.inherited.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:new RegExp("(implements)\\p{space}","dgv"),beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:new RegExp("(?=\\p{space}*extends|permits|\\{)","dgv"),name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:new RegExp("(permits)\\p{space}","dgv"),beginCaptures:{1:{name:"storage.modifier.permits.java"}},end:new RegExp("(?=\\p{space}*extends|implements|\\{)","dgv"),name:"meta.definition.class.permits.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.class.begin.bracket.curly.java"}},contentName:"meta.class.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#class-body"}]}]},"class-body":{patterns:[{include:"#comments-javadoc"},{include:"#comments"},{include:"#enums"},{include:"#class"},{include:"#generics"},{include:"#static-initializer"},{include:"#class-fields-and-methods"},{include:"#annotations"},{include:"#storage-modifiers"},{include:"#member-variables"},{include:"#code"}]},"class-fields-and-methods":{patterns:[{begin:new RegExp("(?==)","dgv"),end:new RegExp("(?=;)","dgv"),patterns:[{include:"#code"}]},{include:"#methods"}]},code:{patterns:[{include:"#annotations"},{include:"#comments"},{include:"#enums"},{include:"#class"},{include:"#record"},{include:"#anonymous-block-and-instance-initializer"},{include:"#try-catch-finally"},{include:"#assertions"},{include:"#parens"},{include:"#constants-and-special-vars"},{include:"#numbers"},{include:"#anonymous-classes-and-new"},{include:"#lambda-expression"},{include:"#keywords"},{include:"#storage-modifiers"},{include:"#method-call"},{include:"#function-call"},{include:"#variables"},{include:"#variables-local"},{include:"#objects"},{include:"#properties"},{include:"#strings"},{include:"#all-types"},{match:new RegExp(",","dgv"),name:"punctuation.separator.delimiter.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.period.java"},{match:new RegExp(";","dgv"),name:"punctuation.terminator.java"}]},comments:{patterns:[{captures:{0:{name:"punctuation.definition.comment.java"}},match:new RegExp("\\/\\*\\*\\/","dgv"),name:"comment.block.empty.java"},{include:"#comments-inline"}]},"comments-inline":{patterns:[{begin:new RegExp("\\/\\*","dgv"),captures:{0:{name:"punctuation.definition.comment.java"}},end:new RegExp("\\*\\/","dgv"),name:"comment.block.java"},{begin:new RegExp("(^[ \\t]+)?(?=\\/\\/)","dgv"),beginCaptures:{1:{name:"punctuation.whitespace.comment.leading.java"}},end:new e("(?!^)","dgv",{strategy:"clip_search"}),patterns:[{begin:new RegExp("\\/\\/","dgv"),beginCaptures:{0:{name:"punctuation.definition.comment.java"}},end:new RegExp("\\n","dgv"),name:"comment.line.double-slash.java"}]}]},"comments-javadoc":{patterns:[{begin:new RegExp("^\\p{space}*(\\/\\*\\*)(?!\\/)","dgv"),beginCaptures:{1:{name:"punctuation.definition.comment.java"}},end:new RegExp("\\*\\/","dgv"),endCaptures:{0:{name:"punctuation.definition.comment.java"}},name:"comment.block.javadoc.java",patterns:[{match:new RegExp("@(author|deprecated|return|see|serial|since|version)\\b","dgv"),name:"keyword.other.documentation.javadoc.java"},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"variable.parameter.java"}},match:new RegExp("(@param)\\p{space}+(\\P{space}+)","dgv")},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"entity.name.type.class.java"}},match:new RegExp("(@(?:exception|throws))\\p{space}+(\\P{space}+)","dgv")},{captures:{1:{name:"keyword.other.documentation.javadoc.java"},2:{name:"entity.name.type.class.java"},3:{name:"variable.parameter.java"}},match:new RegExp("\\{(@link)\\p{space}+(\\P{space}+)?#([\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+\\p{space}*\\([^\\(\\)]*\\))[^\\n]*?\\}","dgv")}]}]},"constants-and-special-vars":{patterns:[{match:new RegExp("\\b(true|false|null)\\b","dgv"),name:"constant.language.java"},{match:new RegExp("\\bthis\\b","dgv"),name:"variable.language.this.java"},{match:new RegExp("\\bsuper\\b","dgv"),name:"variable.language.java"}]},enums:{begin:new RegExp("^\\p{space}*([\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]*)(enum)\\p{space}+([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)","dgv"),beginCaptures:{1:{patterns:[{include:"#storage-modifiers"}]},2:{name:"storage.modifier.java"},3:{name:"entity.name.type.enum.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.enum.end.bracket.curly.java"}},name:"meta.enum.java",patterns:[{begin:new RegExp("\\b(extends)\\b","dgv"),beginCaptures:{1:{name:"storage.modifier.extends.java"}},end:new RegExp("(?=\\{|\\bimplements\\b)","dgv"),name:"meta.definition.class.inherited.classes.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:new RegExp("\\b(implements)\\b","dgv"),beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:new RegExp("(?=\\{|\\bextends\\b)","dgv"),name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.enum.begin.bracket.curly.java"}},end:new RegExp("(?=\\})","dgv"),patterns:[{begin:new RegExp("(?<=\\{)","dgv"),end:new RegExp("(?=[\\;\\}])","dgv"),patterns:[{include:"#comments-javadoc"},{include:"#comments"},{begin:new RegExp("\\b([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)\\b","dgv"),beginCaptures:{1:{name:"constant.other.enum.java"}},end:new RegExp("(,)|(?=[\\;\\}])","dgv"),endCaptures:{1:{name:"punctuation.separator.delimiter.java"}},patterns:[{include:"#comments-javadoc"},{include:"#comments"},{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"punctuation.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.bracket.round.java"}},patterns:[{include:"#code"}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.bracket.curly.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.bracket.curly.java"}},patterns:[{include:"#class-body"}]}]}]},{include:"#class-body"}]}]},"function-call":{begin:new RegExp("([A-Za-z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)\\p{space}*(\\()","dgv"),beginCaptures:{1:{name:"entity.name.function.java"},2:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.function-call.java",patterns:[{include:"#code"}]},generics:{begin:new RegExp("<","dgv"),beginCaptures:{0:{name:"punctuation.bracket.angle.java"}},end:new RegExp(">","dgv"),endCaptures:{0:{name:"punctuation.bracket.angle.java"}},patterns:[{match:new RegExp("\\b(extends|super)\\b","dgv"),name:"storage.modifier.$1.java"},{captures:{1:{name:"storage.type.java"}},match:new RegExp("(?<!\\.)([a-zA-Z\\$_][a-zA-Z0-9\\$_]*)(?=\\p{space}*<)","dgv")},{include:"#primitive-arrays"},{match:new RegExp("[a-zA-Z\\$_][a-zA-Z0-9\\$_]*","dgv"),name:"storage.type.generic.java"},{match:new RegExp("\\?","dgv"),name:"storage.type.generic.wildcard.java"},{match:new RegExp("&","dgv"),name:"punctuation.separator.types.java"},{match:new RegExp(",","dgv"),name:"punctuation.separator.delimiter.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.period.java"},{include:"#parens"},{include:"#generics"},{include:"#comments"}]},keywords:{patterns:[{match:new RegExp("\\bthrow\\b","dgv"),name:"keyword.control.throw.java"},{match:new RegExp("[\\?\\:]","dgv"),name:"keyword.control.ternary.java"},{match:new RegExp("\\b(return|yield|break|case|continue|default|do|while|for|switch|if|else)\\b","dgv"),name:"keyword.control.java"},{match:new RegExp("\\b(instanceof)\\b","dgv"),name:"keyword.operator.instanceof.java"},{match:new RegExp("(<<|>>>?|[\\~\\^])","dgv"),name:"keyword.operator.bitwise.java"},{match:new RegExp("(([\\&\\^\\|]|<<|>>>?)=)","dgv"),name:"keyword.operator.assignment.bitwise.java"},{match:new RegExp("(===?|!=|<=|>=|<>|[\\<\\>])","dgv"),name:"keyword.operator.comparison.java"},{match:new RegExp("([\\+\\*\\/\\%\\-]=)","dgv"),name:"keyword.operator.assignment.arithmetic.java"},{match:new RegExp("(=)","dgv"),name:"keyword.operator.assignment.java"},{match:new RegExp("(--|\\+\\+)","dgv"),name:"keyword.operator.increment-decrement.java"},{match:new RegExp("([\\-\\+\\*\\/\\%])","dgv"),name:"keyword.operator.arithmetic.java"},{match:new RegExp("(!|&&|\\|\\|)","dgv"),name:"keyword.operator.logical.java"},{match:new RegExp("([\\|\\&])","dgv"),name:"keyword.operator.bitwise.java"},{match:new RegExp("\\b(const|goto)\\b","dgv"),name:"keyword.reserved.java"}]},"lambda-expression":{patterns:[{match:new RegExp("->","dgv"),name:"storage.type.function.arrow.java"}]},"member-variables":{begin:new RegExp("(?=private|protected|public|native|synchronized|abstract|threadsafe|transient|static|final)","dgv"),end:new RegExp("(?=[\\=\\;])","dgv"),patterns:[{include:"#storage-modifiers"},{include:"#variables"},{include:"#primitive-arrays"},{include:"#object-types"}]},"method-call":{begin:new RegExp("(\\.)\\p{space}*([A-Za-z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)\\p{space}*(\\()","dgv"),beginCaptures:{1:{name:"punctuation.separator.period.java"},2:{name:"entity.name.function.java"},3:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.method-call.java",patterns:[{include:"#code"}]},methods:{begin:new RegExp("(?!new)(?=[\\p{L}\\p{M}\\p{N}\\p{Pc}\\<][^\\n]*\\p{space}+)(?=([^\\=\\/]|\\/(?!\\/))+\\()","dgv"),end:new RegExp("(\\})|(?=;)","dgv"),endCaptures:{1:{name:"punctuation.section.method.end.bracket.curly.java"}},name:"meta.method.java",patterns:[{include:"#storage-modifiers"},{begin:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)\\p{space}*(\\()","dgv"),beginCaptures:{1:{name:"entity.name.function.java"},2:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.method.identifier.java",patterns:[{include:"#parameters"},{include:"#parens"},{include:"#comments"}]},{include:"#generics"},{begin:new RegExp("(?=[\\p{L}\\p{M}\\p{N}\\p{Pc}][^\\n]*\\p{space}+[\\p{L}\\p{M}\\p{N}\\p{Pc}]+\\p{space}*\\()","dgv"),end:new RegExp("(?=\\p{space}+[\\p{L}\\p{M}\\p{N}\\p{Pc}]+\\p{space}*\\()","dgv"),name:"meta.method.return-type.java",patterns:[{include:"#all-types"},{include:"#parens"},{include:"#comments"}]},{include:"#throws"},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.method.begin.bracket.curly.java"}},contentName:"meta.method.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#code"}]},{include:"#comments"}]},module:{begin:new RegExp("((open)\\p{space})?(module)\\p{space}+([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)","dgv"),beginCaptures:{1:{name:"storage.modifier.java"},3:{name:"storage.modifier.java"},4:{name:"entity.name.type.module.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.module.end.bracket.curly.java"}},name:"meta.module.java",patterns:[{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.module.begin.bracket.curly.java"}},contentName:"meta.module.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#comments"},{include:"#comments-javadoc"},{match:new RegExp("\\b(requires|transitive|exports|opens|to|uses|provides|with)\\b","dgv"),name:"keyword.module.java"}]}]},numbers:{patterns:[{match:new RegExp("\\b(?<!\\$)0([xX])((?<!\\.)\\p{AHex}([_\\p{AHex}]*\\p{AHex})?[Ll]?(?!\\.)|(\\p{AHex}([_\\p{AHex}]*\\p{AHex})?\\.?|(\\p{AHex}([_\\p{AHex}]*\\p{AHex})?)?\\.\\p{AHex}([_\\p{AHex}]*\\p{AHex})?)[Pp][\\+\\-]?[0-9]([0-9_]*[0-9])?[FfDd]?)\\b(?!\\$)","dgv"),name:"constant.numeric.hex.java"},{match:new RegExp("\\b(?<!\\$)0([bB])[01]([01_]*[01])?[Ll]?\\b(?!\\$)","dgv"),name:"constant.numeric.binary.java"},{match:new RegExp("\\b(?<!\\$)0[0-7]([0-7_]*[0-7])?[Ll]?\\b(?!\\$)","dgv"),name:"constant.numeric.octal.java"},{match:new RegExp("(?<!\\$)(\\b[0-9]([0-9_]*[0-9])?\\.\\B(?!\\.)|\\b[0-9]([0-9_]*[0-9])?\\.([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)[FfDd]?\\b|\\b[0-9]([0-9_]*[0-9])?\\.([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)?[FfDd]\\b|\\b[0-9]([0-9_]*[0-9])?\\.([0-9]([0-9_]*[0-9])?)([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)?[FfDd]?\\b|(?<!\\.)\\B\\.[0-9]([0-9_]*[0-9])?([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)?[FfDd]?\\b|\\b[0-9]([0-9_]*[0-9])?([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)[FfDd]?\\b|\\b[0-9]([0-9_]*[0-9])?([Ee][\\+\\-]?[0-9]([0-9_]*[0-9])?)?[FfDd]\\b|\\b(0|[1-9]([0-9_]*[0-9])?)(?!\\.)[Ll]?\\b)(?!\\$)","dgv"),name:"constant.numeric.decimal.java"}]},"object-types":{patterns:[{include:"#generics"},{begin:new RegExp("\\b((?:[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*\\.\\p{space}*)*)([A-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(?=\\[)","dgv"),beginCaptures:{1:{patterns:[{match:new RegExp("[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"storage.type.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.period.java"}]},2:{name:"storage.type.object.array.java"}},end:new RegExp("(?!\\p{space}*\\[)","dgv"),patterns:[{include:"#comments"},{include:"#parens"}]},{captures:{1:{patterns:[{match:new RegExp("[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"storage.type.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.period.java"}]}},match:new RegExp("\\b((?:[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*\\.\\p{space}*)*[A-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\p{space}*(?=<)","dgv")},{captures:{1:{patterns:[{match:new RegExp("[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"storage.type.java"},{match:new RegExp("\\.","dgv"),name:"punctuation.separator.period.java"}]}},match:new RegExp("\\b((?:[A-Za-z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*\\.\\p{space}*)*[A-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*)\\b((?=\\p{space}*[A-Za-z\\$_\\n])|(?=\\p{space}*\\.\\.\\.))","dgv")}]},"object-types-inherited":{patterns:[{include:"#generics"},{captures:{1:{name:"punctuation.separator.period.java"}},match:new RegExp("\\b(?:[A-Z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\p{space}*(\\.)\\p{space}*)*[A-Z][\\p{L}\\p{M}\\p{N}\\p{Pc}]*\\b","dgv"),name:"entity.other.inherited-class.java"},{match:new RegExp(",","dgv"),name:"punctuation.separator.delimiter.java"}]},objects:{match:new RegExp("(?<![\\p{L}\\p{M}\\p{N}\\p{Pc}\\$])[a-zA-Z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*(?=\\p{space}*\\.\\p{space}*[\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+)","dgv"),name:"variable.other.object.java"},parameters:{patterns:[{match:new RegExp("\\bfinal\\b","dgv"),name:"storage.modifier.java"},{include:"#annotations"},{include:"#all-types"},{include:"#strings"},{match:new RegExp("[\\p{L}\\p{M}\\p{N}\\p{Pc}]+","dgv"),name:"variable.parameter.java"},{match:new RegExp(",","dgv"),name:"punctuation.separator.delimiter.java"},{match:new RegExp("\\.\\.\\.","dgv"),name:"punctuation.definition.parameters.varargs.java"}]},parens:{patterns:[{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"punctuation.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.bracket.round.java"}},patterns:[{include:"#code"}]},{begin:new RegExp("\\[","dgv"),beginCaptures:{0:{name:"punctuation.bracket.square.java"}},end:new RegExp("\\]","dgv"),endCaptures:{0:{name:"punctuation.bracket.square.java"}},patterns:[{include:"#code"}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.bracket.curly.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.bracket.curly.java"}},patterns:[{include:"#code"}]}]},"primitive-arrays":{patterns:[{begin:new RegExp("\\b(void|boolean|byte|char|short|int|float|long|double)\\b\\p{space}*(?=\\[)","dgv"),beginCaptures:{1:{name:"storage.type.primitive.array.java"}},end:new RegExp("(?!\\p{space}*\\[)","dgv"),patterns:[{include:"#comments"},{include:"#parens"}]}]},"primitive-types":{match:new RegExp("\\b(void|boolean|byte|char|short|int|float|long|double)\\b","dgv"),name:"storage.type.primitive.java"},properties:{patterns:[{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"keyword.control.new.java"}},match:new RegExp("(\\.)\\p{space}*(new)","dgv")},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"variable.other.object.property.java"}},match:new RegExp("(\\.)\\p{space}*([a-zA-Z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)(?=\\p{space}*\\.\\p{space}*[a-zA-Z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)","dgv")},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"variable.other.object.property.java"}},match:new RegExp("(\\.)\\p{space}*([a-zA-Z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)","dgv")},{captures:{1:{name:"punctuation.separator.period.java"},2:{name:"invalid.illegal.identifier.java"}},match:new RegExp("(\\.)\\p{space}*([0-9][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)","dgv")}]},record:{begin:new RegExp("(?=[\\p{L}\\p{M}\\p{N}\\p{Pc}]?[\\p{L}\\p{M}\\p{N}\\p{Pc}\\p{space}]*\\brecord\\p{space}+[\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+)","dgv"),end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.class.end.bracket.curly.java"}},name:"meta.record.java",patterns:[{include:"#storage-modifiers"},{include:"#generics"},{include:"#comments"},{begin:new RegExp("(record)\\p{space}+([\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+)(<[\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]+>)?(\\()","dgv"),beginCaptures:{1:{name:"storage.modifier.java"},2:{name:"entity.name.type.record.java"},3:{patterns:[{include:"#generics"}]},4:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},name:"meta.record.identifier.java",patterns:[{include:"#code"}]},{begin:new RegExp("(implements)\\p{space}","dgv"),beginCaptures:{1:{name:"storage.modifier.implements.java"}},end:new RegExp("(?=\\p{space}*\\{)","dgv"),name:"meta.definition.class.implemented.interfaces.java",patterns:[{include:"#object-types-inherited"},{include:"#comments"}]},{include:"#record-body"}]},"record-body":{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.class.begin.bracket.curly.java"}},end:new RegExp("(?=\\})","dgv"),name:"meta.record.body.java",patterns:[{include:"#record-constructor"},{include:"#class-body"}]},"record-constructor":{begin:new RegExp("(?!new)(?=[\\p{L}\\p{M}\\p{N}\\p{Pc}\\<][^\\n]*\\p{space}+)(?=([^\\(\\=\\/]|\\/(?!\\/))+(?=\\{))","dgv"),end:new RegExp("(\\})|(?=;)","dgv"),endCaptures:{1:{name:"punctuation.section.method.end.bracket.curly.java"}},name:"meta.method.java",patterns:[{include:"#storage-modifiers"},{begin:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}]+)","dgv"),beginCaptures:{1:{name:"entity.name.function.java"}},end:new RegExp("(?=\\p{space}*\\{)","dgv"),name:"meta.method.identifier.java",patterns:[{include:"#comments"}]},{include:"#comments"},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.method.begin.bracket.curly.java"}},contentName:"meta.method.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#code"}]}]},"static-initializer":{patterns:[{include:"#anonymous-block-and-instance-initializer"},{match:new RegExp("static","dgv"),name:"storage.modifier.java"}]},"storage-modifiers":{match:new RegExp("\\b(public|private|protected|static|final|native|synchronized|abstract|threadsafe|transient|volatile|default|strictfp|sealed|non-sealed)\\b","dgv"),name:"storage.modifier.java"},strings:{patterns:[{begin:new RegExp('"""',"dgv"),beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:new RegExp('"""',"dgv"),endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.triple.java",patterns:[{match:new RegExp('(\\\\""")(?!")|(\\\\[^\\n])',"dgv"),name:"constant.character.escape.java"}]},{begin:new RegExp('"',"dgv"),beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:new RegExp('"',"dgv"),endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.double.java",patterns:[{match:new RegExp("\\\\[^\\n]","dgv"),name:"constant.character.escape.java"}]},{begin:new RegExp("'","dgv"),beginCaptures:{0:{name:"punctuation.definition.string.begin.java"}},end:new RegExp("'","dgv"),endCaptures:{0:{name:"punctuation.definition.string.end.java"}},name:"string.quoted.single.java",patterns:[{match:new RegExp("\\\\[^\\n]","dgv"),name:"constant.character.escape.java"}]}]},throws:{begin:new RegExp("throws","dgv"),beginCaptures:{0:{name:"storage.modifier.java"}},end:new RegExp("(?=[\\{\\;])","dgv"),name:"meta.throwables.java",patterns:[{match:new RegExp(",","dgv"),name:"punctuation.separator.delimiter.java"},{match:new RegExp("[a-zA-Z\\$_][\\.a-zA-Z0-9\\$_]*","dgv"),name:"storage.type.java"},{include:"#comments"}]},"try-catch-finally":{patterns:[{begin:new RegExp("\\btry\\b","dgv"),beginCaptures:{0:{name:"keyword.control.try.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.try.end.bracket.curly.java"}},name:"meta.try.java",patterns:[{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"punctuation.section.try.resources.begin.bracket.round.java"}},end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.section.try.resources.end.bracket.round.java"}},name:"meta.try.resources.java",patterns:[{include:"#code"}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.try.begin.bracket.curly.java"}},contentName:"meta.try.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#code"}]}]},{begin:new RegExp("\\b(catch)\\b","dgv"),beginCaptures:{1:{name:"keyword.control.catch.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.catch.end.bracket.curly.java"}},name:"meta.catch.java",patterns:[{include:"#comments"},{begin:new RegExp("\\(","dgv"),beginCaptures:{0:{name:"punctuation.definition.parameters.begin.bracket.round.java"}},contentName:"meta.catch.parameters.java",end:new RegExp("\\)","dgv"),endCaptures:{0:{name:"punctuation.definition.parameters.end.bracket.round.java"}},patterns:[{include:"#comments"},{include:"#storage-modifiers"},{begin:new RegExp("[a-zA-Z\\$_][\\.a-zA-Z0-9\\$_]*","dgv"),beginCaptures:{0:{name:"storage.type.java"}},end:new RegExp("(\\|)|(?=\\))","dgv"),endCaptures:{1:{name:"punctuation.catch.separator.java"}},patterns:[{include:"#comments"},{captures:{0:{name:"variable.parameter.java"}},match:new RegExp("[\\p{L}\\p{M}\\p{N}\\p{Pc}]+","dgv")}]}]},{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.catch.begin.bracket.curly.java"}},contentName:"meta.catch.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#code"}]}]},{begin:new RegExp("\\bfinally\\b","dgv"),beginCaptures:{0:{name:"keyword.control.finally.java"}},end:new RegExp("\\}","dgv"),endCaptures:{0:{name:"punctuation.section.finally.end.bracket.curly.java"}},name:"meta.finally.java",patterns:[{begin:new RegExp("\\{","dgv"),beginCaptures:{0:{name:"punctuation.section.finally.begin.bracket.curly.java"}},contentName:"meta.finally.body.java",end:new RegExp("(?=\\})","dgv"),patterns:[{include:"#code"}]}]}]},variables:{begin:new e("(?=\\b((void|boolean|byte|char|short|int|float|long|double)|(?:(?=(([\\p{L}\\p{M}\\p{N}\\p{Pc}]+\\.)*[A-Z_]+[\\p{L}\\p{M}\\p{N}\\p{Pc}]*))\\3))\\b\\p{space}*(<[\\p{L}\\p{M}\\p{N}\\p{Pc}\\<\\>\\,\\.\\?\\p{space}\\[\\]]*>)?\\p{space}*((\\[\\])*)?\\p{space}+[A-Za-z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*([\\p{L}\\p{M}\\p{N}\\p{Pc}\\[\\]\\,\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\[\\]\\,\\p{space}]*)?\\p{space}*([\\=\\:\\;]))","dgv",{hiddenCaptures:[3]}),end:new RegExp("(?=[\\=\\:\\;])","dgv"),name:"meta.definition.variable.java",patterns:[{captures:{1:{name:"variable.other.definition.java"}},match:new RegExp("([A-Za-z\\$_][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)(?=\\p{space}*(\\[\\])*\\p{space}*([\\;\\:\\=\\,]))","dgv")},{include:"#all-types"},{include:"#code"}]},"variables-local":{begin:new RegExp("(?=\\b(var)\\b\\p{space}+[A-Za-z_\\$][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*\\p{space}*([\\=\\:\\;]))","dgv"),end:new RegExp("(?=[\\=\\:\\;])","dgv"),name:"meta.definition.variable.local.java",patterns:[{match:new RegExp("\\bvar\\b","dgv"),name:"storage.type.local.java"},{captures:{1:{name:"variable.other.definition.java"}},match:new RegExp("([A-Za-z\\$_][\\p{L}\\p{M}\\p{N}\\p{Pc}\\$]*)(?=\\p{space}*(\\[\\])*\\p{space}*([\\=\\:\\;]))","dgv")},{include:"#code"}]}},scopeName:"source.java",embeddedLangs:void 0,aliases:void 0}),t=[a];export{t as default};
