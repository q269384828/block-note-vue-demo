import{E as e}from"./index-BjuMCJvv.js";import n from"./javascript-Be5GZkAy.js";import a from"./css-DT8d8ZFq.js";const t=Object.freeze({displayName:"Ruby Haml",fileTypes:["haml","html.haml"],foldingStartMarker:new RegExp("^\\p{space}*([\\-\\%\\#\\:\\.\\p{L}\\p{M}\\p{N}\\p{Pc}\\=][^\\n]*)\\p{space}(?=\\n?$)","dgv"),foldingStopMarker:new RegExp("^\\p{space}*(?=\\n?$)","dgv"),name:"haml",patterns:[{begin:new RegExp("^(\\p{space}*)==","dgv"),contentName:"string.quoted.double.ruby",end:new RegExp("(?=\\n?$)\\n*","dgv"),patterns:[{include:"#interpolated_ruby"}]},{begin:new RegExp("^(\\p{space}*):ruby","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.definition.prolog.haml"}},match:new RegExp("^(!!!)((?=\\n?$)|\\p{space}[^\\n]*)","dgv"),name:"meta.prolog.haml"},{begin:new RegExp("^(\\p{space}*):javascript","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"js.haml",patterns:[{include:"source.js"}]},{begin:new RegExp("^(\\p{space}*)%script","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"js.inline.haml",patterns:[{include:"source.js"}]},{begin:new RegExp("^(\\p{space}*):ruby(?=\\n?$)","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{captures:{1:{name:"punctuation.section.comment.haml"}},match:new RegExp("^(\\p{space}*)(\\/\\[[^\\]][^\\n]*?(?=\\n?$)\\n?)","dgv"),name:"comment.line.slash.haml"},{begin:new RegExp("^(\\p{space}*)(-#|\\/|-\\p{space}*\\/\\*+)","dgv"),beginCaptures:{2:{name:"punctuation.section.comment.haml"}},end:new RegExp("^(?!\\1\\p{space}+|\\n)()","dgv"),name:"comment.block.haml",patterns:[{include:"text.haml"}]},{begin:new RegExp("^\\p{space}*(?:((%)([\\-\\p{L}\\p{M}\\p{N}\\p{Pc}\\:]+))|(?=[\\.\\#]))","dgv"),captures:{1:{name:"meta.tag.haml"},2:{name:"punctuation.definition.tag.haml"},3:{name:"entity.name.tag.haml"}},end:new RegExp("(?=\\n?$)|(?![\\.\\#\\{\\(\\[]|&amp;|[\\=\\-\\~]|!=|&=|\\/)","dgv"),patterns:[{begin:new RegExp("==","dgv"),contentName:"string.quoted.double.ruby",end:new RegExp("(?=\\n?$)\\n?","dgv"),patterns:[{include:"#interpolated_ruby"}]},{captures:{1:{name:"entity.other.attribute-name.class"}},match:new RegExp("(\\.[\\p{L}\\p{M}\\p{N}\\p{Pc}\\-\\:]+)","dgv"),name:"meta.selector.css"},{captures:{1:{name:"entity.other.attribute-name.id"}},match:new RegExp("(#[\\p{L}\\p{M}\\p{N}\\p{Pc}\\-]+)","dgv"),name:"meta.selector.css"},{begin:new e("(?<!#)\\{(?=[^\\n]*(,|(do)|[\\{\\}\\|]|(#[^\\n]*)|(?:(?=(\\r\\n?|[\\n\\v\\f\\x85\\u2028\\u2029]))\\4))\\p{space}*)","dgv",{hiddenCaptures:[4]}),end:new RegExp("\\p{space}*\\}(?!\\p{space}*,)(?!\\p{space}*\\|)(?!#\\{[^\\n]*\\})","dgv"),name:"meta.section.attributes.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{begin:new RegExp("\\(","dgv"),end:new RegExp("\\)","dgv"),name:"meta.section.attributes.plain.haml",patterns:[{match:new RegExp("([\\p{L}\\p{M}\\p{N}\\p{Pc}\\-]+)","dgv"),name:"constant.other.symbol.ruby"},{match:new RegExp("=","dgv"),name:"punctuation"},{include:"#variables"},{begin:new RegExp('"',"dgv"),end:new RegExp('"',"dgv"),name:"string.quoted.double.ruby",patterns:[{match:new RegExp("\\\\(x\\p{AHex}{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|[^\\n])","dgv"),name:"constant.character.escape.ruby"},{include:"#interpolated_ruby"}]},{include:"#interpolated_ruby"}]},{begin:new RegExp("\\[(?=[^\\n]+([\\,\\[\\]\\|]|(#[^\\n]*))\\p{space}*)","dgv"),end:new RegExp("\\p{space}*\\](?![^\\n]*(?!#\\[)\\])","dgv"),name:"meta.section.object.haml",patterns:[{include:"source.ruby"},{include:"#continuation"},{include:"#rubyline"}]},{include:"#interpolated_ruby_line"},{include:"#rubyline"},{match:new RegExp("\\/","dgv"),name:"punctuation.terminator.tag.haml"}]},{begin:new RegExp("^(\\p{space}*):(ruby|opal)(?=\\n?$)","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:new RegExp("^(\\p{space}*):ruby(?=\\n?$)","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:new RegExp("^(\\p{space}*):(s(?:tyle|ass))(?=\\n?$)","dgv"),end:new RegExp("^(?=\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:new RegExp("^(\\p{space}*):coffee(script)?","dgv"),end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.coffee.embedded.filter.haml",patterns:[{include:"source.coffee"}]},{begin:new RegExp("^(\\p{space}*):plain(?=\\n?$)","dgv"),end:new RegExp("^(?=\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{begin:new RegExp("^(\\p{space}*)(:ruby)","dgv"),beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:new RegExp("(?<=\\n)(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.ruby.embedded.filter.haml",patterns:[{include:"source.ruby"}]},{begin:new RegExp("^(\\p{space}*)(:sass)","dgv"),beginCaptures:{2:{name:"keyword.control.filter.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.embedded.filter.sass",patterns:[{include:"source.sass"}]},{begin:new RegExp("^(\\p{space}*):(s(?:tyles|ass))(?=\\n?$)","dgv"),end:new RegExp("^(?=\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"source.sass.embedded.filter.haml",patterns:[{include:"source.sass"}]},{begin:new RegExp("^(\\p{space}*):plain(?=\\n?$)","dgv"),end:new RegExp("^(?=\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"text.plain.embedded.filter.haml",patterns:[{include:"text.plain"}]},{captures:{1:{name:"meta.escape.haml"}},match:new RegExp("^\\p{space}*(\\.)","dgv")},{begin:new RegExp("^\\p{space}*(?=[\\=\\-\\~]|!=|&=)","dgv"),end:new RegExp("(?=\\n?$)","dgv"),patterns:[{include:"#interpolated_ruby_line"},{include:"#rubyline"}]},{begin:new RegExp("^(\\p{space}*)(:php)","dgv"),captures:{2:{name:"entity.name.tag.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"meta.embedded.php",patterns:[{include:"text.html.php#language"}]},{begin:new RegExp("^(\\p{space}*)(:markdown)","dgv"),captures:{2:{name:"entity.name.tag.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"meta.embedded.markdown",patterns:[{include:"text.html.markdown"}]},{begin:new RegExp("^(\\p{space}*)(:(css|styles?))(?=\\n?$)","dgv"),captures:{2:{name:"entity.name.tag.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"meta.embedded.css",patterns:[{include:"source.css"}]},{begin:new RegExp("^(\\p{space}*)(:sass)(?=\\n?$)","dgv"),captures:{2:{name:"entity.name.tag.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"meta.embedded.sass",patterns:[{include:"source.sass"}]},{begin:new RegExp("^(\\p{space}*)(:scss)(?=\\n?$)","dgv"),captures:{2:{name:"entity.name.tag.haml"}},end:new RegExp("^(?!\\1\\p{space}+|(?=\\n?$)\\n*)()","dgv"),name:"meta.embedded.scss",patterns:[{include:"source.scss"}]}],repository:{continuation:{captures:{1:{name:"punctuation.separator.continuation.haml"}},match:new RegExp("(\\|)\\p{space}*\\n","dgv")},interpolated_ruby:{patterns:[{captures:{0:{name:"punctuation.section.embedded.ruby"},1:{name:"source.ruby.embedded.source.empty"}},match:new RegExp("#\\{(\\})","dgv"),name:"source.ruby.embedded.source"},{begin:new RegExp("#\\{","dgv"),captures:{0:{name:"punctuation.section.embedded.ruby"}},end:new RegExp("(\\})","dgv"),name:"source.ruby.embedded.source",patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]},{include:"#variables"}]},interpolated_ruby_line:{begin:new RegExp("!?==","dgv"),contentName:"string.source.ruby.embedded.haml",end:new RegExp("(?=\\n?$)","dgv"),name:"meta.line.ruby.interpolated.haml",patterns:[{include:"#interpolated_ruby"},{include:"source.ruby#escaped_char"}]},nest_curly_and_self:{patterns:[{begin:new RegExp("\\{","dgv"),captures:{0:{name:"punctuation.section.scope.ruby"}},end:new RegExp("\\}","dgv"),patterns:[{include:"#nest_curly_and_self"},{include:"source.ruby"}]}]},rubyline:{begin:new RegExp("(&amp|!)?([\\=\\-\\~])","dgv"),contentName:"source.ruby.embedded.haml",end:new RegExp("((do|\\{)( \\|[\\.\\*]+\\|)?)(?=\\n?$)|(?=\\n?$)|^(?![^\\n]*\\|\\p{space}*)(?=\\n?$)\\n?","dgv"),endCaptures:{1:{name:"source.ruby.embedded.html"},2:{name:"keyword.control.ruby.start-block"}},name:"meta.line.ruby.haml",patterns:[{captures:{1:{name:"keyword.control.php"}},match:new RegExp("\\p{space}+((elseif|foreach|switch|declare|default|use))(?=[\\p{space}\\(])","dgv")},{captures:{1:{name:"keyword.control.import.include.php"}},match:new RegExp("\\p{space}+(require_once|include_once)(?=[\\p{space}\\(])","dgv")},{match:new RegExp("\\p{space}+(catch|try|throw|exception|finally|die)(?=[\\p{space}\\(]|\\n*)","dgv"),name:"keyword.control.exception.php"},{captures:{1:{name:"storage.type.function.php"}},match:new RegExp("\\p{space}+(function\\p{space}*)((?=\\())","dgv")},{captures:{1:{name:"keyword.control.php"}},match:new RegExp("\\p{space}+(use\\p{space}*)((?=\\())","dgv")},{match:new RegExp("([\\|\\,\\<]|do|\\{)\\p{space}*(#[^\\n]*)?(?=\\n?$)\\n*","dgv"),name:"source.ruby",patterns:[{include:"#rubyline"}]},{match:new RegExp("#[^\\n]*(?=\\n?$)","dgv"),name:"comment.line.number-sign.ruby"},{include:"source.ruby"},{include:"#continuation"}]},variables:{patterns:[{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:new RegExp("(#@)[a-zA-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"variable.other.readwrite.instance.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:new RegExp("(#@@)[a-zA-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"variable.other.readwrite.class.ruby"},{captures:{1:{name:"punctuation.definition.variable.ruby"}},match:new RegExp("(#\\$)[a-zA-Z_][\\p{L}\\p{M}\\p{N}\\p{Pc}]*","dgv"),name:"variable.other.readwrite.global.ruby"}]}},scopeName:"text.haml",embeddedLangs:["javascript","css"],aliases:void 0,embeddedLangsLazy:["ruby","sass","coffee","markdown"]}),d=[...n,...a,t];export{d as default};
